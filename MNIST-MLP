{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Implementing Multi Layer Perceptron"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here, we will learn how to implement a Feedforward Neural Network using python. We will use handwritten digit classification to illustrate the effectiveness of a feedforward network. We will also see how to spot and overcome Overfitting during training."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "MNIST is a commonly used handwritten digit dataset consisting of 60,000 images in the training set and 10,000 images in the test set. So, each digit has 6000 images in the training set. The digits are size-normalized and centered in a fixed-size ( 28×28 ) image. The task is to train a machine learning algorithm to recognize a new sample from the test set correctly."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![SegmentLocal](mnist-data.gif \"segment\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "%config InlineBackend.figure_format = 'retina'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Using TensorFlow backend.\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import keras\n",
    "import matplotlib.pyplot as plt\n",
    "from keras.datasets import mnist\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Dense, Dropout\n",
    "from keras.optimizers import RMSprop\n",
    "from keras.utils import to_categorical"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load the Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Keras comes with the MNIST data loader. It has a function mnist.load_data() which downloads the data from its servers if it is not present on your computer. The data loaded using this function is divided into training and test sets."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "batch_size = 128\n",
    "num_classes = 10\n",
    "epochs = 20\n",
    "\n",
    "# the data, split between train and test sets\n",
    "(x_train, y_train), (x_test, y_test) = mnist.load_data()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## EDA\n",
    "\n",
    "Let us see how the data looks like. The data consists of handwritten numbers ranging from 0 to 9, along with their ground truth. It has 60,000 train samples and 10,000 test samples. Each sample is a 28×28 grayscale image."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training data shape :  (60000, 28, 28) (60000, 28, 28)\n",
      "Testing data shape  :  (60000, 28, 28) (10000, 28, 28)\n",
      "-------------------------------------------------------\n",
      "Total number of outputs :  10\n",
      "Output classes          :  [0 1 2 3 4 5 6 7 8 9]\n"
     ]
    }
   ],
   "source": [
    "print('Training data shape : ', x_train.shape, x_train.shape)\n",
    "print('Testing data shape  : ', x_train.shape, x_test.shape)\n",
    "print('-'*55)\n",
    "\n",
    "# Find the unique numbers from the train labels\n",
    "classes = np.unique(y_train)\n",
    "nClasses = len(classes)\n",
    "print('Total number of outputs : ', nClasses)\n",
    "print('Output classes          : ', classes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 300,
       "width": 593
      },
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=[10,5])\n",
    " \n",
    "# Display the first image in training data\n",
    "plt.subplot(121)\n",
    "plt.imshow(x_train[0,:,:], cmap='gray')\n",
    "plt.title(\"Ground Truth : {}\".format(y_train[0]))\n",
    " \n",
    "# Display the first image in testing data\n",
    "plt.subplot(122)\n",
    "plt.imshow(x_test[0,:,:], cmap='gray')\n",
    "plt.title(\"Ground Truth : {}\".format(y_test[0]))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Preprocess the data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The images are grayscale and the pixel values range from 0 to 255. We will apply the following preprocessing to the data before feeding it to the network."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    Convert each image matrix ( 28×28 ) to an array ( 28*28 = 784 dimenstional ) which will be fed to the network as a single feature."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Change from matrix to array of dimension 28x28 to array of dimention 784\n",
    "x_train = x_train.reshape(60000, 784)\n",
    "x_test = x_test.reshape(10000, 784)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    Convert the data to float and scale the values between 0 to 1."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "60000 train samples\n",
      "10000 test samples\n"
     ]
    }
   ],
   "source": [
    "# Change to float datatype\n",
    "x_train = x_train.astype('float32')\n",
    "x_test = x_test.astype('float32')\n",
    "\n",
    "# Scale the data to lie between 0 to 1\n",
    "x_train /= 255\n",
    "x_test /= 255\n",
    "print(x_train.shape[0], 'train samples')\n",
    "print(x_test.shape[0], 'test samples')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "    Convert the labels from integer to categorical ( one-hot ) encoding since that is the format required by Keras to perform multiclass classification. One-hot encoding is a type of boolean representation of integer data. It converts the integer to an array of all zeros except a 1 at the index of the integer.\n",
    "    \n",
    "    For example, using a one-hot encoding for 10 classes, \n",
    "    the integer 5 will be encoded as 0000010000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original label 0 :  5\n",
      "After conversion to categorical ( one-hot ) :  [0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]\n"
     ]
    }
   ],
   "source": [
    "print('Original label 0 : ', y_train[0])\n",
    "\n",
    "# convert class vectors to binary class matrices\n",
    "y_train = keras.utils.to_categorical(y_train, num_classes)\n",
    "y_test = keras.utils.to_categorical(y_test, num_classes)\n",
    "\n",
    "# Display the change for category label using one-hot encoding\n",
    "print('After conversion to categorical ( one-hot ) : ', y_train[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Build Neural Network"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src = 'mlp-mnist-schematic.jpg' width=500 height=300>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We had mentioned that we will be using a network with 2 hidden layers and an output layer with 10 units. The number of units in the hidden layers is kept to be 512. The input to the network is the 784-dimensional array converted from the 28×28 image.\n",
    "\n",
    "We will use the Sequential model for building the network. In the Sequential model, we can just stack up layers by adding the desired layer one by one. We use the Dense layer, also called fully connected layer since we are building a feedforward network in which all the neurons from one layer are connected to the neurons in the previous layer. Apart from the Dense layer, we add the ReLU activation function which is required to introduce non-linearity to the model. This will help the network learn non-linear decision boundaries. The last layer is a softmax layer as it is a multiclass classification problem. For binary classification, we can use sigmoid."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_1 (Dense)              (None, 512)               401920    \n",
      "_________________________________________________________________\n",
      "dropout_1 (Dropout)          (None, 512)               0         \n",
      "_________________________________________________________________\n",
      "dense_2 (Dense)              (None, 512)               262656    \n",
      "_________________________________________________________________\n",
      "dropout_2 (Dropout)          (None, 512)               0         \n",
      "_________________________________________________________________\n",
      "dense_3 (Dense)              (None, 10)                5130      \n",
      "=================================================================\n",
      "Total params: 669,706\n",
      "Trainable params: 669,706\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model = Sequential()\n",
    "model.add(Dense(512, activation='relu', input_shape=(784,)))\n",
    "model.add(Dropout(0.2))\n",
    "model.add(Dense(512, activation='relu'))\n",
    "model.add(Dropout(0.2))\n",
    "model.add(Dense(num_classes, activation='softmax'))\n",
    "\n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Configure the Network"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this step, we configure the optimizer to be rmsprop. We also specify the loss type which is categorical cross entropy which is used for multiclass classification. We also specify the metrics ( accuracy in this case ) which we want to track during the training process. You can also try using any other optimizer such as adam or SGD."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "model.compile(loss='categorical_crossentropy',\n",
    "              optimizer='rmsprop',\n",
    "              metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Train the Model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The network is ready to get trained. This is done using the fit() function in Keras. We specify the number of epochs as 20. This means that the whole dataset will be fed to the network 20 times. We will be using the test data for validation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 60000 samples, validate on 10000 samples\n",
      "Epoch 1/20\n",
      "60000/60000 [==============================] - 18s 303us/step - loss: 0.2437 - acc: 0.9238 - val_loss: 0.1230 - val_acc: 0.9605\n",
      "Epoch 2/20\n",
      "60000/60000 [==============================] - 17s 279us/step - loss: 0.1020 - acc: 0.9690 - val_loss: 0.0769 - val_acc: 0.9767\n",
      "Epoch 3/20\n",
      "60000/60000 [==============================] - 15s 255us/step - loss: 0.0743 - acc: 0.9777 - val_loss: 0.0692 - val_acc: 0.9797\n",
      "Epoch 4/20\n",
      "60000/60000 [==============================] - 15s 256us/step - loss: 0.0590 - acc: 0.9823 - val_loss: 0.0786 - val_acc: 0.97991s - loss:\n",
      "Epoch 5/20\n",
      "60000/60000 [==============================] - 15s 247us/step - loss: 0.0496 - acc: 0.9851 - val_loss: 0.0867 - val_acc: 0.9781\n",
      "Epoch 6/20\n",
      "60000/60000 [==============================] - 14s 242us/step - loss: 0.0445 - acc: 0.9871 - val_loss: 0.0843 - val_acc: 0.9787\n",
      "Epoch 7/20\n",
      "60000/60000 [==============================] - 15s 250us/step - loss: 0.0399 - acc: 0.9880 - val_loss: 0.0744 - val_acc: 0.9821\n",
      "Epoch 8/20\n",
      "60000/60000 [==============================] - 15s 242us/step - loss: 0.0325 - acc: 0.9902 - val_loss: 0.0820 - val_acc: 0.9830\n",
      "Epoch 9/20\n",
      "60000/60000 [==============================] - 15s 258us/step - loss: 0.0304 - acc: 0.9912 - val_loss: 0.0803 - val_acc: 0.9811\n",
      "Epoch 10/20\n",
      "60000/60000 [==============================] - 17s 288us/step - loss: 0.0294 - acc: 0.9917 - val_loss: 0.0836 - val_acc: 0.9823\n",
      "Epoch 11/20\n",
      "60000/60000 [==============================] - 17s 281us/step - loss: 0.0282 - acc: 0.9922 - val_loss: 0.0912 - val_acc: 0.9826\n",
      "Epoch 12/20\n",
      "60000/60000 [==============================] - 15s 247us/step - loss: 0.0268 - acc: 0.9926 - val_loss: 0.0952 - val_acc: 0.9816\n",
      "Epoch 13/20\n",
      "60000/60000 [==============================] - 16s 265us/step - loss: 0.0244 - acc: 0.9930 - val_loss: 0.1003 - val_acc: 0.9816\n",
      "Epoch 14/20\n",
      "60000/60000 [==============================] - 16s 262us/step - loss: 0.0236 - acc: 0.9939 - val_loss: 0.1027 - val_acc: 0.9822\n",
      "Epoch 15/20\n",
      "60000/60000 [==============================] - 15s 256us/step - loss: 0.0221 - acc: 0.9937 - val_loss: 0.0987 - val_acc: 0.9834\n",
      "Epoch 16/20\n",
      "60000/60000 [==============================] - 16s 261us/step - loss: 0.0211 - acc: 0.9944 - val_loss: 0.1035 - val_acc: 0.9847\n",
      "Epoch 17/20\n",
      "60000/60000 [==============================] - 16s 260us/step - loss: 0.0244 - acc: 0.9940 - val_loss: 0.0984 - val_acc: 0.9841\n",
      "Epoch 18/20\n",
      "60000/60000 [==============================] - 15s 258us/step - loss: 0.0192 - acc: 0.9946 - val_loss: 0.1043 - val_acc: 0.9847\n",
      "Epoch 19/20\n",
      "60000/60000 [==============================] - 16s 270us/step - loss: 0.0187 - acc: 0.9951 - val_loss: 0.1021 - val_acc: 0.9845\n",
      "Epoch 20/20\n",
      "60000/60000 [==============================] - 16s 260us/step - loss: 0.0188 - acc: 0.9954 - val_loss: 0.1093 - val_acc: 0.9823\n"
     ]
    }
   ],
   "source": [
    "history = model.fit(x_train, y_train,\n",
    "                    batch_size=batch_size,\n",
    "                    epochs=epochs,\n",
    "                    verbose=1,\n",
    "                    validation_data=(x_test, y_test))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Evaluate the trained model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We check the performance on the whole test data using the evaluate() method."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test loss: 0.10930647410967749\n",
      "Test accuracy: 0.9823\n"
     ]
    }
   ],
   "source": [
    "score = model.evaluate(x_test, y_test, verbose=0)\n",
    "print('Test loss:', score[0])\n",
    "print('Test accuracy:', score[1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Check for Overfitting"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The fit() function returns a history object which has a dictionary of all the metrics which were required to be tracked during training. We can use the data in the history object to plot the loss and accuracy curves to check how the training process went.\n",
    "You can use the history.history.keys() function to check what metrics are present in the history. It should look like the following\n",
    "\n",
    "[‘acc’, ‘loss’, ‘val_acc’, ‘val_loss’]\n",
    "\n",
    "Let us plot the loss and accuracy curves."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Accuracy Curves')"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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eACrrJNOVdigEcDdVwFXJFi30BCiu08CJhXzmVMJAseKr3v3gucLF6anHyIiIiIilUCMWY9lQn8akpLrFrWN5KJFwdpGERERERGpMBQ0SskddBA0aJB/vnUrLF+evv6IiIiIiEjSKWiUkjODrl0LluXkpKcvIiIiIiKSEgoapXS0rlFEREQkrbZv346ZceaZZ5a6re7du1O3bt0k9Cp5HnroIcyMF198Md1dqbQUNErpRK9r1EijiIiIVBJmVqzXpEmT0t1lkRKp0NlTpQzES4aj9NsiIiJSwY0bN65Q2X333ceWLVsYPnw4DSJzPwBHHXVUSvpRp04dli5dmpQRwpdeeqnM9wCUzKegUUonnAzn+++D83AynI4d09svERERkRQbP358obJJkyaxZcsWrr/+etq1a1cm/TAzOnfunJS22rZtm5R2pGLRcJCUjpLhiIiIiBRLeN3grl27uOmmmzj44IOpXr06Q4cOBWDjxo3cdddd9O7dmwMPPJDq1avTrFkzzj33XBYtWlSovXhrGkePHo2ZsXDhQp577jm6detGrVq1yM7O5tJLL2XDhg1x+xZp+vTpmBn33nsvH3zwAaeeeir169enbt26nHzyyeTE+bff119/zSWXXEJ2dja1a9emW7duPP/88wXaK613332XgQMHkp2dTY0aNTjooIO4/vrr+fbbbwvVXbNmDcOHD6dTp07Url2bhg0b0qVLF37xi1+watWqvHq5ubk89thjHHfccWRnZ1OrVi3atGnDGWecwdSplWM79mgaaZTS694dZs3KP1+4EC64IH39ERERkfRK0wbkJeZe5o/Mzc3lzDPPZNmyZZx66qk0btw4b5Rv8eLFjBs3jj59+jBw4EDq16/PV199xSuvvML06dN566236NWrV8LPmjBhAtOnT2fgwIH07duXBQsWMHnyZJYsWcLChQupWrVqQu3Mnz+fm266iT59+nDVVVfx5ZdfMnXqVPr06cOSJUsKjFKuXr2aE044gTVr1tC/f3+OOeYYvvnmG4YMGcLpp59evC8rjhdeeIGLL76YqlWrMnjwYFq1asV7773H/fffz7Rp01iwYAEHHnggAFu3buW4445jzZo1DBgwgEGDBrF3715WrlzJiy++yKWXXkrr1q0BuP7663nwwQfp2LEjF154IXXr1mXNmjW8//77TJ06lUGDBiWl/+WJgkYpPSXDERERESmWXbt2sW3bNpYsWVJo7WPXrl1Zt24dDRs2LFC+fPlyjjvuOEaNGsWHH36Y8LNmzpzJRx99RKdOnQBwdwYNGsQrr7zCG2+8wRlnnJFQO9OmTWPKlCmcd955eWUTJ05k9OjRPPzww0yYMCGvfNSoUaxZs4Zbb72VsWPH5pVfe+219OzZM+G+x7Np0yauvPJKzIz58+fTPSKj/9ixY7n99tsZOnQoL7/8MgCvvvoqq1ev5qabbuK2224r0Nbu3bvZt28fkD/K2KFDB/773/9So0aNAnW/++67Uve9PNL0VCm9eMlwRERERCSuO++8s1DACNCoUaNCASNAhw4dOPvss1m4cCEbN25M+Dm/+c1v8gJGCNZAXnnllQB88MEHCbdz6qmnFggYAa6++upC7Wzbto2XX36Zpk2b8pvf/KZA/eOPP57Bgwcn/Mx4pkyZwrZt27j88ssLBIwAN954I82bN2fatGmFgrxatWoVaqtmzZoFpuSaGdWrV485ApudnV3qvpdHChql9MLJcMLCyXBEREREJK5jjz027rXZs2dzzjnn0KpVK6pXr563bcdTTz0FBOvzEhUdVAF5UzE3b95cqnbq1atH/fr1C7SzZMkS9u3bR7du3ahZs2ahe5Ix0hhe29mvX79C12rWrEmPHj3Izc3l448/BuCUU06hSZMmjB07ljPPPJOHH36Yjz76iNyogY4qVapwwQUXsHTpUg4//HDGjh3Lm2++ybZt20rd5/JM01Ol9MyC0caZM/PLFi5UBlUREZHKKg1rBMub2rVrU69evZjXJk+ezGWXXUbdunU55ZRTaN++PXXq1MHMePPNN3n33XeLtS1GrNHMrKwgDPjxxx9L1U64rch2tmzZAkCzZs1i1o9XXhzhZ7Ro0SLm9XD596EM/9nZ2bz//vuMHz+e6dOn8+qrr+b1ZdiwYYwZMyZvZPHRRx+lc+fOPP3009x+++0AVKtWjbPPPpuJEydWygyzCholOaKDxpwcuPDC9PVHREREJINZEcmCbrrpJurVq8fixYs56KCDClz7/PPPeffdd1PdvVI54IADAFi/fn3M6/HKi6N+/foArFu3Lub1tWvXFqgH0L59e55++mlyc3NZsmQJM2fO5KGHHuLGG2+katWqjBkzBggCxBtuuIEbbriBdevWMW/ePCZPnsxLL73Ep59+yscff5xw8qCKQtNTJTmUDEdERESk1Pbt28fKlSs56qijCgWMe/fuzfiAEeCII44gKyuLnJwcdu/eXej6/PnzS/2Mo48+GoC333670LU9e/bw7rvvYmYcddRRha5XqVKFI488khEjRjB9+nSAuFtpNG/enMGDBzNt2jSOPfZY/ve///HFF1+Uuv/ljYJGSQ4lwxEREREptaysLFq2bMn//ve/AklccnNz+d3vfsdXX32Vxt4lpl69egwaNIgNGzZwzz33FLj2/vvvM2XKlFI/4/zzz6du3bo89dRTeesWw+68807Wrl2bt38jwEcffcTq1asLtRMe9axduzYQ7Hk5Z86cQvX27NmTNyU2VjKdik7TUyU5wslwQvPG2boVvvgCIjJ1iYiIiMj+jRgxgtGjR3PkkUdyzjnnUKVKFebMmcOKFSs4/fTTmTFjRrq7uF8TJ05k/vz53HzzzcydO5djjjmG1atX88ILL3DWWWcxdepUqlQp+fhVo0aN+Otf/8qll17KCSecwODBg2nZsiXvvfces2fPpnXr1jz00EN59adPn864cePo2bMnhxxyCNnZ2axcuZJp06ZRtWpVRo8eDQRrIPv06UOHDh049thjadOmDTt37uT111/n888/56KLLqJNmzal/n7KGwWNkhyxkuHk5ChoFBERESmmkSNHUrduXR566CGefPJJ6tSpQ58+fXjhhRd47LHHykXQ2KZNG9577z1+97vf8cYbbzB//nwOPfRQnn76aXbt2sXUqVPz1j6W1IUXXkibNm246667mD59Otu2bePAAw/k17/+NTfddBNNmzbNq3v22Wfz7bffMm/ePF5++WW2b99OixYtOOussxg1alReZtjGjRtzxx13MHv2bObNm8e3337LAQccQMeOHRkzZgxDhgwpVZ/LK3Nltyp3zCyna9euXXMybd3gmDEQsakro0bBvfemrz8iIiKSMkuXLgWgS5cuae6JlDfDhw/ngQceYP78+Zx44onp7k65k+jvXrdu3Vi0aNEid+9WZMUEaE2jJI+S4YiIiIhISKy9JD/88EP++te/cuCBB3LccceloVdSEpqeKskTLxlOKeari4iIiEj51KVLF7p27cphhx1GzZo1WbZsWd7U2ocffjhvr0jJfPpJSfIoGY6IiIiIhFx77bW89tprPPfcc2zfvp2GDRty5plncsMNN9CjR490d0+KQUGjJI+S4YiIiIhIyJ133smdd96Z7m5IEmjeoCSX1jWKiIiIiFQoCholuRQ0ioiIiIhUKAoaJblCe9zkyckJkuGIiIiIiEi5pKBRkqt9e2jYMP9827YgGY6IiIiIiJRLCholucyga9eCZZqiKiIiIiJSbilolOTTukYRERERkQpDQaMkX/S6xoUL09MPEREREREpNQWNknzRI42LFikZjoiIiIhIOaWgUZJPyXBERERERCoMBY2SfEqGIyIiIpJUX3zxBWbGlVdeWaD8kksuwcxYvXp1wm21atWKgw8+ONldLCBef6V8UtAoqaF1jSIiIlLBXXTRRZgZf/nLX/Zb95RTTsHMmDp1ahn0LPX27duHmXHyySenuysJCweyqQ6YKyIFjZIayqAqIiIiFdzVV18NwGOPPVZkvRUrVjBz5kxatGjBmWeemdQ+3HPPPSxdupTmzZsntd3Satu2LUuXLuX2229Pd1ckCRQ0SmooGY6IiIhUcH369KFTp04sXryYRYsWxa33+OOP4+5cccUVZGVlJbUPLVq0oHPnzklvt7SqVatG586dMy6YlZJR0CipoWQ4IiIiUglcddVVQPzRxh9//JFJkyYVWt/3zTffcMstt9CjRw+aN29O9erVadmyJRdffDGffvppws+Pt6bR3XnggQc49NBDqVGjBi1btmTYsGFs3bo1Zjvff/89EyZMoG/fvrRs2ZLq1avTtGlTBg0axAcffFCg7uOPP061atUAmDlzJmaW9wqPLBa1pnHNmjVcc801tG3blho1atC0aVPOPfdcFi9eXKju448/jpkxefJkZs6cSe/evalbty7169fnrLPOYtmyZQl/VyXxj3/8g5NOOokDDjiAWrVqceSRR3L33Xfzww8/FKr70Ucf8bOf/Yx27dpRo0YNmjRpQrdu3RgxYgQ//vhjXr2tW7dyyy23cPjhh1OvXj3q1avHwQcfzIUXXhjzO8gECholNZQMR0REpNIyK1+v0hgyZAjVq1fnb3/7Gzt37ix0/bXXXuObb77h5JNPpn379nnls2fPZsKECTRq1Ihzzz2X66+/nmOPPZYXXniBY489liVLlpSqX0OHDmX48OFs2bKFX/7yl/zsZz9j+vTpDBgwgL179xaqv2TJEm666SaysrI466yzGDlyJP379+ett96iZ8+e/Pvf/86r27VrV8aOHQtA+/btGTduXN6rV69eRfZr+fLldOvWjUceeYROnToxcuRITjnlFP71r39xwgknMGPGjJj3TZ06ldNOO40GDRpwzTXX0KNHD6ZPn07v3r3ZtGlTKb6p+G644QYuvPBCli1bxiWXXMLQoUPZt28fv/3tbzn99NPZt29fXt3Fixdz/PHHM336dE444QRGjhzJ+eefT+PGjXn44YfzvnN3Z8CAAYwfP5769etz1VVX8atf/YpjjjmG2bNn8/7776fks5Sau+tVzl5ATteuXT3jjRnjDvmvkSPT3SMRERFJkk8++cQ/+eSTmNci//dfHl6ldf5s7uMMAAAgAElEQVT55zvgTz31VKFrZ599tgM+ZcqUAuXr1q3zbdu2Faq/aNEir127tp955pkFyj///HMH/Be/+EWB8osvvtgBX7VqVV7ZnDlzHPCOHTv6pk2b8sp37tzpxxxzjAPeoUOHAu1s3rzZv/vuu0L9WbFihTdr1swPP/zwAuV79+51wPv371/onqL6269fPwf8rrvuKlA+d+5cr1KlimdnZ/uOHTvyyh977DEHPCsry2fPnl3gntGjRzvgEydOjNmHeH2K/uyxzJ071wFv27atr1+/Pq987969fvrppzvgd999d175sGHDHPDp06cXamvjxo2em5vr7sHPF/DzzjuvUL19+/YV+HnFU9TvXqSuXbs6kONJiD800iipo2Q4IiIiUgmEE+I8/vjjBcrXrl3La6+9RrNmzRg4cGCBa82aNaNu3bqF2jr66KPp3bs3M2fOLDClsTieeuopAMaOHUvDiOVCtWrV4o477oh5T4MGDWjcuHGh8rZt23LOOeewZMkS1qxZU6L+hK1YsYJZs2bRvn17Ro0aVeDaSSedxPnnn893330XM8PsxRdfTJ8+fQqUhb/36OmzyfDkk08CcPPNN9O0adO88qysLCZOnIiZFfp5Q/AdR2vUqBEWNaQdq17VqlUL/LwyiYJGSR0lwxEREZFKoF+/fnTo0IEFCxawdOnSvPKnnnqKffv2cfnll+etAYz0yiuv8JOf/ITmzZtTrVq1vHWBM2bMYNeuXSWedhlOytO7d+9C13r16kWVKrFDgHnz5jF48GBat25NjRo18voT3lLkm2++KVF/wsLr9Xr16hUzcU+/fv0K1IvUPXo7N6B169YAbN68uVT9iiX8HYb7FKlLly60aNGCzz//nO3btwNwwQUXUKVKFc466yyGDBnCs88+y5dfflno3iOOOIIjjjiCZ599lpNOOol77rmHd999N+aU4UyioFFSR8lwREREKqX0Tzgt3qu0IhO+hEef3J0nnngibjKYP/7xjwwcOJD33nuP3r17M2LECG6++WbGjRvHEUccAcCePXtK1J8tW7YAwWhmtOrVq8cczZoyZQp9+vRhxowZdO/enaFDhzJ27FjGjRvHSSedVKr+RPerRYsWMa+Hy7///vtC1xo0aFCoLBx4lnREtiiJ9jVc74QTTmDu3Ln06dOHF154gcsuu4wOHTrQpUsXnn/++QJ9fvvttxk2bBhfffUVN9xwAz169CA7O5vhw4ezY8eOpH+WZMis3LxSsZgFo40RC6dZuBA6dUpfn0RERERS4IorruDmm2/mmWee4c4772TevHl8+eWX9OvXr9Bm8nv37mX8+PEceOCBLFq0qFBwN2/evFL1pX79+gCsX7+eNm3aFLj2ww8/sHnz5kJB2NixY6lZsyY5OTkccsghBa6tWrWq1H2K7Ne6detiXl+7dm2BeukU2de2bdsWuh6rryeeeCKvvvoqe/bsYeHChcyYMYOHHnqICy+8kGbNmuVNr23UqBH3338/999/P59//jlvv/02jz76KA888ABbt27Nm16cSTTSKKmldY0iIiJSCTRr1oyzzz47b01eeAuO8Lq7SOvXr2fbtm307NmzUMC4devWUm+70DWUwX7OnDmFrs2dO5fcGMuFli9fzuGHH14oYPzxxx9ZsGBBofrhKa7FGeU7+uijgSAojnXf7NmzC/Q/ncJ9ffvttwtdW7ZsGWvXrqVjx44x16XWqFGDE088kdtvv50//elPuDvTpk2L+ZyOHTty1VVXMWfOHGrVqhVzPWcmUNAoqaWgUURERCqJ8J6NEydOZOrUqWRnZ/PTn/60UL0WLVpQs2ZNPvzwwwLTEX/44Qd+/etfl3qN3hVXXAHAbbfdVmCq565du/j9738f8562bduybNmyAqOA7s7NN98ccy/EKlWq0LBhQ77++uuE+9WuXTv69u3L8uXLefDBBwtcW7BgAc8//zyNGzculDQoHX7+858DwXe4cePGvPJ9+/YxatQo3J1f/OIXeeVz586NuQfm+vXrAahduzYQBOeR617DNm/ezN69e/PqZRpNT5XUipcMJ84CbBEREZHyasCAAbRv3z4vm+fQoUOpXr16oXpVq1Zl6NCh3HvvvRxxxBGcffbZ7Nmzh1mzZrFlyxZ69+4dc5QwUb169eKaa67hL3/5C4cddhjnnXceWVlZTJ06lSZNmhTIBho2YsQIhg4dylFHHcW5555LVlYW8+bN47PPPuPMM89k+vTphe7p378/L774IgMHDuToo48mKyuLPn360LNnz7h9e/TRR+nZsycjRoxgxowZdOvWja+//popU6aQlZXFpEmTqFOnTok/eyI2bNjA5ZdfHvNavXr1ePDBB+nVqxcjR47kj3/8Y953WLt2bV599VU++eQTevfuzciRI/PumzBhArNnz6ZPnz4cdNBB1KlThyVLljBjxgwaNWqU9weFxYsXM3jwYLp3787hhx9OixYt2LBhA9OmTWPfvn2MGTMmpZ+9xJKxb4de2qcxrtxc94YNC643//TTdPdKRERESinRveIqm9tvv90BB/zTIv7Ns3fvXp8wYYJ37tzZa9as6c2bN/dLL73Uv/7665h7LxZnn0Z39x9//NHvu+8+79y5s1evXt0PPPBAHzp0qG/ZssVbtmwZc6/CJ554wo888kivVauWN27c2H/605/6kiVL/MYbb3TA582bV6D+2rVr/YILLvAmTZp4lSpVHPDbbrutyP66u69atcp/+ctfeuvWrb1atWp5z/rwww8L1Q3v0/jss8/G/A4pYq/IaOE+FfVq3LhxgXsmT57sPXr08Lp163qNGjX8sMMO8zvuuMN3795doN6MGTN8yJAh3rlzZz/ggAO8Tp06fsghh/iwYcN85cqVefW+/vpr/+1vf+snnHCCN2vWzKtXr+6tWrXyM844w19//fWEPkc69mk09ySkjJIyZWY5Xbt27ZpTXqZ6nnJKwWQ4zz0HF12Uvv6IiIhIqYWn2HXp0iXNPRGpXBL93evWrRuLFi1a5O7diqyYAM0RlNTTukYRERERkXJLQaOknoJGEREREZFyS0GjpF737gXPw8lwREREREQk41XooNHMWpnZk2a2xsz2mNkKM7vPzBomeH8dM7vYzP5mZp+a2Q4z22ZmC81slJkVToeVf++hZvaCmW0ws91mtszMbjGzWsn7hOVEu3bQMOIr37YNPv88bd0REREREZHEVdig0cw6ADnAFcAHwJ+AL4HhwLtm1jiBZk4CJgOnAkuAB4G/Ay2Be4HZZlYzxrOPAz4EBgH/Bu4HtgI3A2+ZWY1SfbjyxkxTVEVEREREyqkKGzQCfwaaAsPcfZC7/9bd+xEEj4cAf0igjXXAJUALdz8v1MbVQCdgEdADuC7yBjOrCjwF1AbOc/eL3H0McBzwEnAiMCIpn7A8UdAoIiIiIlIq6dr5okIGjWZ2EDAAWAE8HHV5HLADuNTMitw51N0/cvfn3P2HqPJtwMTQaZ+o23oDXYC57v5KxD25wA2h01+ZmSX8gSoCBY0iIiIVSvifMrnKUyBSZsJBY1mHEhUyaAT6hY5vhoK1PKGAbwHBSODxpXjG3tBxX5xnvx59g7t/CXwGtAUOKsWzyx8lwxEREalQatQIVtvs2LEjzT0RqTzCv2/h37+yUlGDxkNCx8/iXA9nYelUimf8PHSMDg6T9mwzy4n1AjoXv7tppmQ4IiIiFUq9evUAWLduHdu2bSM3NzdtU+dEKjJ3Jzc3l23btrFu3Tog//evrGSV6dPKTv3QcUuc6+HyBiVp3MyGAqcBHwFPluWzy61wMpx//zu/LCcHDjkk/j0iIiKSsRo1asSOHTvYuXMnq1evTnd3RCqN2rVr06hRozJ9ZkUdadyf8CTgYv85zMzOAe4jSJJzrrvv3c8tJX62u3eL9QI+LeYzM4PWNYqIiFQYVapUoXXr1jRp0oSaNWuW+RorkcrEzKhZsyZNmjShdevWVKlStmFcRR1pDI/m1Y9z/YCoegkxs0HAP4ANQN/QGsUyeXaFEL2uceHC9PRDREREkqJKlSpkZ2eTnZ2d7q6ISApV1JHGZaFjvHWDHUPHeOsOCzGzwcAUYD3Q292Xxama9GdXGNEjjYsXKxmOiIiIiEiGq6hB4+zQcYCZFfiMZlaPYK/EXcB7iTRmZhcBfwfWEASMRWVwmRU6nhajnYMIgsmVQKxRyopNyXBERERERMqdChk0uvty4E2gHXBd1OVbgDrAM+6elyPazDqbWaGspGY2BHgW+BroFWdKaqQ5wFKgl5mdHdFOFeDu0OkjXhnTi4WT4UTSukYRERERkYxWUdc0AlwLvAM8YGb9CQK544C+BFNDb4yqvzR0zFvFbWZ9CbKjViEYvbwixiLv7939vvCJu/9oZlcQjDi+aGYvEgSc/YHuBHtE/ikZH7Bc6t69YAbVhQvhoovS1x8RERERESlShQ0a3X25mXUHbiWYKnoGsBZ4ALjF3Tcl0Exb8kdjfx6nzkqCbKqRz37fzI4hGNUcANQL1bsVuMvd9xTz41QcGmkUERERESlXKmzQCODuq4ArEqxbaAjR3ScBk0r47E+AwSW5t0KLlwynjNMGi4iIiIhIYvQvdSlbSoYjIiIiIlKuKGiUsqVkOCIiIiIi5YqCRil73bsXPF+4MD39EBERERGR/VLQKGVPI40iIiIiIuWGgkYpe/GS4YiIiIiISMZR0ChlT8lwRERERETKDQWNUvbMtK5RRERERKScUNAo6aF1jSIiIiIi5YKCRkkPBY0iIiIiIuWCgkZJj+igcdEiJcMREREREclACholPdq1g0aN8s+3b4fPPktbd0REREREJDYFjZIeZpqiKiIiIiJSDiholPRR0CgiIiIikvEUNEr6KGgUEREREcl4CholfaL3alQyHBERERGRjKOgUdKnbVslwxERERERyXAKGiV9lAxHRERERCTjKWiU9FLQKCIiIiKS0RQ0SnopaBQRERERyWgKGiW9lAxHRERERCSjKWiU9FIyHBERERGRjKagUdJLyXBERERERDKagkZJPwWNIiIiIiIZS0GjpF/0usaFC9PTDxERERERKURBo6Rf9Ejj4sVKhiMiIiIikiEUNEr6KRmOiIiIiEjGUtAo6adkOCIiIiIiGUtBo2QGrWsUEREREclICholM2ikUUREREQkIylolMygZDgiIiIiIhlJQaNkBiXDERERERHJSAoaJTOYaV2jiIiIiEgGUtAomUPrGkVEREREMo6CRskcChpFRERERDKOgkbJHEqGIyIiIiKScRQ0SuZQMhwRERERkYyjoFEyh5LhiIiIiIhkHAWNklm0rlFEREREJKMoaJTMoqBRRERERCSjKGiUzBIrGc6PP6anLyIiIiIioqBRMkzbttC4cf65kuGIiIiIiKSVgkbJLGaaoioiIiIikkEUNErmUdAoIiIiIpIxFDRK5lHQKCIiIiKSMRQ0SuaJ3qtx0SIlwxERERERSRMFjZJ52rQpmAxnxw4lwxERERERSRMFjZJ5lAxHRERERCRjKGiUzKSgUUREREQkIyholMykoFFEREREJCMoaJTMpGQ4IiIiIiIZQUGjZCYlwxERERERyQgVOmg0s1Zm9qSZrTGzPWa2wszuM7OGxWjjFDObaGYzzWyTmbmZzd/PPV7E673Sf7JKQMlwREREREQyQla6O5AqZtYBeAdoCkwDPgWOBYYDp5nZie6+MYGmrgMGAruBL4BEA86VwKQY5asTvF+6dYM338w/z8mBSy5JX39ERERERCqhChs0An8mCBiHufuD4UIz+yMwAvgD8KsE2rkbuJEg6GwNfJXg81e4+/jidFiiRK9rXLgwPf0QEREREanEKuT0VDM7CBgArAAejro8DtgBXGpmdfbXlru/6+7/c3dlYSlr0dNTFy9WMhwRERERkTKW0qDRzA4IvarFuX6Imb0QWnO4wczeNLO+SXh0v9DxTXfPjbzg7tuABUBt4PgkPCueBmb2czP7vZldZ2apfFbFpGQ4IiIiIiJpl7LpqWbWG5gFOHAC8GHU9Y7Au0D9cBHQH+hnZpe5+99K8fhDQsd4EcbnBCORnYCZpXhOUf4PeCKywMw+Bi519/8m0oCZxcv80rmUfSsfwslwotc1dumSvj6JiIiIiFQyqRxpPI0gEPzM3T+Mcf0+oEGoTi7wXeh9FeARM2teimeHA9Etca6HyxuU4hlF+SNwItAEqAccA7xIEEjOMrOWKXpuxaN1jSIiIiIiaZXKoLEXwShjoZE8M2tDEFQ68BbQ2N2bAj8jCCDrAL9IYd8sdPRUNO7uo9z9HXf/zt23u/tCdx8MvARkA6MTbKdbrBdBUp7KQdtuiIiIiIikVSqDxvBI4ZIY135CfuB2rbtvBXD3KcAboWsDSvHs8Ehi/TjXD4iqV1YeCR17lfFzyy8lwxERERERSatUBo3ZoeN3Ma6Fg6b/uPvyqGvhBWylWbe3LHTsFOd6x9CxrLOqfBs67jdrq4QoGY6IiIiISFqlMmisWcQzehBMDX07xrV1oWNp1hvODh0HmFmB55tZPYL1hruA90rxjJIIZ1D9soyfW36ZaV2jiIiIiEgapTJo/D50bBNZaGYHA61Dp+8U0acSz0EMjV6+CbQDrou6fAvBSN8z7r4jol+dzazUWUnNrGus/R/N7EjgD6HTyaV9TqWidY0iIiIiImmTsi03gKUE01DPBCZGlF8U8X5ejPvCmUVjTWstjmsJgtIHzKx/qD/HAX0JpqXeGKO/kL/WMjgx6wlcGTqtGzp2NLNJ4TrufnnELcOAc8xsFrAK2EMw1fY0oCrwGPD3UnyuykdBo4iIiIhI2qQyaJxBEDT2MrMHgceBw4DfEExNfd/d18W4LxwhlGrhmrsvN7PuwK0EAdsZwFrgAeAWd9+UYFMHA0OiyppGlV0e8X4qQaKdI4F+BNN0NxJ8H4+5+yvF+yQSNxlO1arp6Y+IiIiISCWSyqDxEWAkQUKca0MvCEbyHLg7+gYzyyLImurEHoUsFndfBVyRYF2LUz4JmFSMZ04lCBwlWcLJcDZuDM7DyXC6dElvv0REREREKoGUrWl09y0EU1PXEgSK4ZcDd7n7tBi3nQ00DL2flaq+STmjZDgiIiIiImmTypFG3P1DM+tIMDX0YGAn8G93XxrnlpbA00Au8G4q+yblTLdu8MYb+ec5OXDppenrj4iIiIhIJZHSoBHA3XcBLyVY98EUd0fKKyXDERERERFJi1RuuSGSPPGS4YiIiIiISEqlPWg0s4ZmNsDMzjCzVunuj2SoNm0gOzv/fMcOWLYsff0REREREakkUhY0mlkDMxsWenWKU+e3wDcE21H8C1hhZpPMrEaq+iXllJmmqIqIiIiIpEEqRxrPAO4DJhDsU1iAmV0M3AHUID+zahXgUuCpFPZLyisFjSIiIiIiZS6VQeNpoeNcdy8QNJqZAbdFFL0I3AusJAgef2ZmPVPYNymPFDSKiIiIiJS5VAaNRxLsyRhr64wTgXah62Pc/Xx3vwE4BtgUqjMkhX2T8ih6r8ZFi5QMR0REREQkxVIZNIazlnwR49rJoeMu4M/hQnf/DvgbwWjj8Snsm5RHrVsXTIazc6eS4YiIiIiIpFgqg8bGoeP2GNfCU0/nuPvOqGv/DR3bpKRXUn4pGY6IiIiISJlLZdCYGzrWjSw0syzgOIKpqfNj3Beenlo7dV2TcktBo4iIiIhImUpl0LgudDwsqvwkoE7o/Tsx7qsXOkaPQIoUDhoXLkxPP0REREREKolUBo0LCdYmXmJmjSPKfx067iJ2kpzwno6rU9g3Ka+ik+EsXqxkOCIiIiIiKZTKoPFvoWML4EMz+5OZvQEMIpiaOsXdf4hxX4/Q9f+ksG9SXikZjoiIiIhImUpZ0Oju04DXCEYb2wLDyM+auhUYH32PmTUl2I4DYHaq+iblmJLhiIiIiIiUqVSONAKcB9xPECRa6PUBcLK7r4xR/2qgauj9rBT3TcorBY0iIiIiImUmK5WNu/tuYISZjQKaALvcfWsRt0wH5gG57h5rf0eRwusalQxHRERERCRlUho0hrl7LrA+gXoflUF3pLyLHmkMJ8OpWjV2fRERERERKbFUT08VST4lwxERERERKTNlMtIYZmbZwHEEGVXrAduANcAH7v5dWfZFyrFwMpw33sgvy8mBQw9NX59ERERERCqoMhlpNLMzzGwuwRTVV4BHgXtDx38B683sbTM7rSz6IxWA1jWKiIiIiJSJlAaNFniEIDA8kfwMqrFeJwGvmtlfUtknqSCUQVVEREREpEykenrqnwi20Qj7AngL+AzYDtQFOgKnhI4AV5vZHne/PsV9kyTZvRu++QY6dCjDhyoZjoiIiIhImUhZ0GhmXYFfAw5sBn7p7i8VUf8c4BEgGxhqZk+7++JU9U+S48034brroFo1+OgjqF69jB4cTobzXWgpbDgZjtY1ioiIiIgkVSqnp15FMO30B6B/UQEjgLu/DJwM7Andd3VR9SW9fvwRLroITj0VvvgCli6FiRPLsANmWtcoIiIiIlIGUhk09iEYZXzG3T9O5AZ3/w/wNEHQ2CdlPZNSq1oVatUqWHbbbfDVV2XYCa1rFBERERFJuVQGjS1Dx/nFvG9B1P2Soe6+Gxo3zj/ftQuGDgX3MuqAgkYRERERkZRLZdAYzkiyr5j3hesro0mGy86Ge+4pWPbaa/DPf5ZRB+IlwxERERERkaRJZdC4LnTsWsz7wvXXJ7EvkiJDhkDPngXLhg+HbdvK4OHhZDhh4WQ4IiIiIiKSNKkMGhcQrE38uZk1S+QGM2sO/JxgLeSC/VSXDFClCvzlL5AVkYd39WoYP74MHq5kOCIiIiIiKZfKoPHZ0LEBMMvMitwLwcw6E+zh2DBU9EwK+yZJdPjhMGpUwbL77w+24Eg5rWsUEREREUmplAWN7v4WMJ1gtLEzsNjMpprZtWZ2spmdEDpeY2YvAx8DhxKMMk4P3S/lxNix0LZt/vmPP8I110BuboofrKBRRERERCSlUjnSCHAh+dNUqwFnAQ8CbxBkVX0DeAgYGLpuofoXprhfkmR16sCDDxYse+89ePzxFD9YyXBERERERFIqpUGju+8AegO/I0hsY0W81gFjgD7uvjOV/ZLUOOssGDSoYNmYMbBhQwof2ro1NGmSf75zJ3z6aQofKCIiIiJSuaR6pBF3z3X3u4E2QF+CwPA+4InQcUyovK273+PuqZ7QKCl0//3BqGPY99/D6NEpfKCZpqiKiIiIiKRQyoPGMHff6+5zQoHhSHe/KnS8J1S+t6z6IqnTpk3hzKnPPguzZ6fwoQoaRURERERSpsyCxkSZ2U/N7EkzeyLdfZGSGT4cjjiiYNk118CePSl6oIJGEREREZGUybigEegKXB56STlUrRo88kjBsmXL4N57U/TA6L0alQxHRERERCRpMjFolAqgRw+46qqCZbffDl9+mYKHtWqlZDgiIiIiIimioFFS5q67IDs7/3z3brjuOnBP8oOUDEdEREREJGUUNErKNGpUeErq66/DSy+l4GEKGkVEREQkA7jDvn3p7kVyKWiUlLrsMujdu2DZ8OGwdWuSHxS9rnHhwiQ/QEREREQktpUrYdIkGDIk2E3g4YfT3aPkUtAoKWUGf/4zZGXll61ZA+PGJflB0SONH32kZDgiIiIikhJr1sBzz8GVV0KHDtCuHVxxBTzzDKxeneLt5tJAQaOk3KGHwm9+U7DsgQeCJKdJo2Q4IiIiIpIi334LU6YE28h17gwtW8Ill8ATT8RO9DhnTsUav1DQKGXippuCv8CE5ebCr36VxF8mJcMRERERkSTZvBmmTs3ff7xpUzj//GBbuWXL9n//7t2wfHnq+1lWFDRKmahdu/Dc7g8+gMceS+JDFDSKiIiISAls3QqvvgqjRwf/pGzcGH7602B23JIl+7+/WjXo1StYgvX22/D999CpU8q7XWay9l9FJDnOOAPOOQdefjm/7Le/DX4hmzVLwgOUDEdEREREErBzJyxYALNmBesPFy4s3gy4qlXhmGOgXz/o2zfYo7x27dT1N92SEjSaWQWasSupdP/98OabsH17cL5lC4waBZMnJ6HxeMlwqlZNQuMiIiIiUl7t3g3vvRcEiLNmwfvvw969id9vBl27BgFiv37QsyfUq5e6/maaZI00GuChY2kle+t3ySCtWsGtt8LIkfllzz0XZJvq3z8JjTdpEqxUhvxkOIcdVsqGRURERCqPb7+FDz/Mf+XkBNM3GzWC7Ozg1bhx7PeR5+kcedu7N1gKNXt28HrnnSBwLI4jjwyCxL59g6mnDRumpq/lQTKnpyYjYExmO5Khfv1rePpp+Pjj/LJrr4X//Adq1ChFw+FkOK+/nl+Wk6OgUUREpJLbvTv4O/Inn8D//he8PvkENm6Egw8OgoPIV2UKDrZuDf65FBkkrlwZu+7OncF2EomqVSux4DIZgea+fUFm/vBI4vz5sGNH8dro3Dl/umnv3gUT81d2SQka3T0jE+qYWSvgVuA0oDGwFpgK3OLumxNs45TQ/UcBRwMNgQXu3nM/9x0KjAf6AAcAK4F/AHe5+64SfJwKIysryDzVowd4aFz5s89gwgQYO7aUjXfvXjBoXLgQLruslI2KiIik1549sGFDYq/vvw9yBRx8cLB/3MEH57/at4eaNdP9aVInXnC4fHmQuT2WDz4IXpFaty4cSHbqVHDf6fJo9+7gj/aRAeKnn+b/eyzZdu0KgsziBppFjWRGvs/Nhblzg0BxzpwgAC6ODh3yp5v26QMtWhTv/sqknP+nH5+ZdQDeAZoC04BPgWOB4cBpZnaiu29MoKnrgIHAbuALgqBxf88+DpgFVANeBFYB/YCbgf5m1t/d9xT7Q1Ugxx8PV18Njz6aX/aHP8CFFwb/UysxZVAVEZFyIDcXNm1KLAhcv774/xjevj12un+zINsYGkYAACAASURBVCCKDCTDgWWHDlCnTnI+X6qVJDgsjlWrgterr+aX1agR7D0dHUw2bVr656XCvn3BdxIZIP73v8Vbx/f/7d15mFTVve7x769p6GaeQVAQQRAVHMAJnBADThHnaIze6MlJYmJMYnLPzXROohluTs7NYNREPTkxg4kjxqgJKiiCc4yiAiqIDIKCMk9CA02v+8dvl7u6und3VXdVD1Xv53nWU1W79l5716aqqbfW2mu1hp074/Ofb0OGxC2Jp5wCQ4fmfx/FykKhflpoZWb2GDAV+HII4aa05T8HrgVuCyFclUU9E4CteOgcAiyngZZGM+sALAAOBs4JITwULS8D7gUuAL4VQvjPZry2l8eNGzfu5XYeiDZtgoMOii9BBJg61RsKramdlFetqv0XwAx+9zv49KebdawiIiINCcG7wmXbGrhuXX7CTb4NGlQ7UKaHyp49W/54Ch0O82HgQDj88NpBcvToZl5yk6MQ/JykB8R587w7aVN07Oiv4+ij4zJ0qH93W7/eu/WuXx+X9Mfp93fvzu/rzNU++9QOicOHN+M7Zjs0fvx45s2bNy+EML7xtRtWlKHRzIYDS4EVwIgQQk3ac93xbqoGDAghZN3b2cyG0XhonAw8ATwVQjg54bjeAQ4ITTz5xRIaAe64o27v0Xvu8clTmyQE7z/y9tvxMjNv0vzsZ5t8nCIiIjU1sGKFt9bMn++3K1bEQXBnkV980q9f3UCZCpV9+zbvy3hLhMNhw7yl8NBDvRxyiLcSvvmm/3vOn+9dNxct8la65igv9+CY2So5eHB+Qsvq1d6lNhUQX3rJA11TmPmxpgfEww9vfjfmELzFOylQJgXP5gTNfv28m2kqKB50UGmFxEz5DI3F2j11cnQ7Mz0wAoQQtpnZs3gr5HF4wCvEvh/NfCKEsMzM3gJGAakAWdIuuwxuv90nQU356lfh9NOhR48mVGjm83pMmxZPthOC94XdvRuuvjofhy0iIkVu40YPhekBceHCeMqoltahgw/KMWBA46VnT7+G7O23vSxdGt9ftarp16+lvty/8ELd53r2TA6U++wTf3FvrXB48MHQrVv96++/v3/vSNm1y48xFSRT5f33sz+G6mp/vyxcCHfeGS/v27dukDzkkIYHf9m40UNheivi6tXZH0umYcNqB8Rx45r4nasRZj4lRffuvs9sNBY0Mx/v2AFjxsQtiWPGQFmbHGml/SvW0HhQdPtWwvNL8NA4ivyHxmz2PSoqDYZGM0tqShzdtENre8zgllv8j2aqj/2aNT4gzi9/2cRKzzwT7r0XLrmkdsf9L33J/ydIn+9DRERK2u7dcUBID4jvvVf4fffqlV0IHDDAR/PM5ctwnz7+f2umqipYvjwOkemhcsWK3CY3T7dliw8jUF8nqK5dPTzu3Nm64TBbFRXe0nb44bWXr10bv0dS5fXX/atFtjZsiKeASCkrg5Ej4xB58ME+emkqINZ3bWq2BgyoHRCPPrptjwjalKApLaNYQ2Oq1/2WhOdTy3sV2b7bpdGj4RvfgB/+MF52883ebTVzXJusnX8+/OUvcMEFtfs5fP3r/tf9W99q1jGLiEj7EoK3sqUHw/nzYfHi5ndFTKmo8OvbsgmB/fq17DVvKZWVHkoOPrjuc3v2eFhJD5SpULlsWdO7DX74oZ/rpipUOMzVgAE+p3T6vNLV1T4CfGarZC6DuNTU+Ptw8WK4776mH1+PHv696Zhj4oA4ZEhpd8+U/CnW0NiY1MenNS7ozHrfSf2PoxbIcfk8qNb27W97941ly/xxTQ1cdZV3genQoYmVfvzj8NBDcO65tWdz/fa3/X++735Xf0lFRIrQ1q11u5YuWOCtYc3VuzeMHesl1So0aJAHiu7d2/d/Kx07xt1KM+3dW7vLa2aozMf1nG0lHOaivNyP85BDvINTyqZNdVslFyxo+sA0mSoq4Mgja7cgjhqlrplSOMUaGlP/LSSN89UjY71i2Xe71bkz/OpXcMYZ8bKXXvL5HJt1GeJpp/l42WefXfsv9XXXeYvjj37Uvv+HFxEpYemtPOkBMWli8lx07OiBJT0gjh0L++5bmv9tdOjg1/7tv3/tljbwVtw1a+oPlG+/Ddu21V6/PYbDXPXuDSed5CVl717/cTyzVTL1g3mSDh38PB19dNyKOGaMv0dFWkqxhsbF0e2ohOdHRrdJ1x221323a6efDhddVLtrxre/7T1M99mnGRVPnuzzeJx5Zu0RDH78Yw+OP/1paX4DEBFpJ0LwgT8WLqzdcvjGG/kZ0n/IkNrBMDWRe6dOza+7FJj5qKCDB9cOSeD/duvWeTDq2NFHsyymcJiLDh382sWRI/27Tcq2bfF7e/58WLLErztMtSAeeWTDA+WItIRinXJjBPA2DU+5UQb015Qbbct77/mvjem/Sn7yk7VHHmuy55/3ZJo5Q/KXvuSj7qhPh4hIq6mpiVurliypffv22/np1te9e92WwzFjvFVIRKTYaMqNRoQQlprZTHyE1KuBm9Kevh7oCtyWHhjNbHS07aJm7n4u8CZwkplNCyE8FNVfBvwkWufWpgbGYrfvvvCDH/i0Gyl33QVXXglTpjSz8gkT4IknvKLNm+PlN9/sLY633qrgKCJSQDU13mKYHgbT7+drnsMOHbylML3lcOxY71qpjiUiIrkrypZG+Ki18TlgAPAgHuSOBU7Bu4ZODCFsSFs/AIQQLKOeE4B/jR52Ay4A1gKPpNYJIVyRsc2xwGygIzAdWAmcChwFPAucGkLIYYDmOq+taFsawa9ROeYYeOWVeNnIkd5lo7kTzQLw6qvwsY/5uNfpPv1p+O1vmzHyjoiI1NTUHjAlPRTma8CUdIMG1e1aOnp0nv6/EBFpx9TSmIWotfEo4PvA6cCZeLfUG4HrQwgbs6zqQODTGcsGZCy7ImPf/zCzo/FWzalAd7xL6veB/2xOYCwF5eXe6HfccfEExEuWwE9+At/7Xh52cMQRMGeOX8m/dm28/A9/8PHG//AHPwgREalXTY1PKZAZCpcs8WCYy7x12erRw8NgekAcO9anrhARkcIq2pbGYlbsLY0pX/wi3HJL/LhTJ79QfOTI5G1ysmiRD5KzZk3t5Rde6BdRalgyESlhe/fWDYap22XLChMMe/b0v/EHHlj3tl8/dS0VEcmFWhqlJPzf/wv33x83Bu7e7UFy5sw8fXEYPRrmzvXg+O678fLp073F8Z57WmfmZRGRVrBmjV/2PWsWvPhi8yZzb0ivXsnBsG9fBUMRkbZIoVHarF694Be/gE99Kl72+OOe5dIn0G2WkSPhqac8OK5YES9/8EE4/3xPrbowRkSK0Pbt/udv1iwvr7+ev7r79Iknia8vGIqISPui0Cht2ic/Cbff7r9+p1x7rc+c0atXnnZywAFxi+PSpfHyGTPg7LM9QGqCJBFp56qr4aWXPCA+/rjPQrRnT9Pr69u3dhhMv9+nT/6OW0REWp9Co7RpZvDrX/tgB6luUu+/D//+7z5TRt4MHRq3OC5eHC9//HE46yx4+OHSnY1YRNqlEPwaxFRIfPJJ2LIltzr69UsOhprbUESkdCg0Sps3ahR885vw/e/Hy379a7jiCjjqqDzuaPBgb3E89dTa/bTmzPGmzRkzfPg+EZE2au1a75nx+OMeFletyn7bsjI4+mifyvbUU32g6bz16BARkXZNoVHahW99C/7857j3aAjw+c/7YA15nVZx4ED/OX7KFHjttXj5s8/6skcf1c/rItJm7NgBTz8dh8T0P1vZGDnS/7R97GNwyikKiSIiUj+FRmkXKiu9dfG00+Jl8+b5smuuyfPO+veH2bNh6lRIn9bkxRf95/dZszSSQwHs3euneMYMeOwxH8mxb18YMMD/SQYMqH0//bZ7d424KKVh717/25cKic8+m9sIp/36eUBMlf33L9yxiohI8VBolHZj6lS4+GIfPTXlO9+BCy7wnqV51aePfys74wx44YV4+Suv+M/xjz/uiUWaZd06D4ipoLhxY+3n02dCaUhFRXKgrC90du2a/9ciUihLl8YhcfZs2LQp+20rK+GkkzwgTpkChx3m3VBFRERyodAo7crPfw6PPAJbt/rjbdvga1+Du+8uwM569fJJIc88E555Jl6+YAFMmuQXDg0aVIAdF6+aGm+8nTHD/x1ffNG7GjfXrl1+7Va212916ZIcKOu71awr0pI2bPBwmBrAZvny7Lc1g/Hj45A4caLevyIi0nwKjdKuDB4MP/pR7S6p99wDV15Zu+tq3nTv7tcxnn22X+uY8uabcPLJ/s1uv/0KsOPisWmTZ+9UUFy3rrWPyK8De+cdL9no3t0D5MCBMGGCTwUzfry6xEp+VFV5N9NUSJw3L7cfU4YPj0PiKaeo97yIiOSfhXz8zC8tysxeHjdu3LiX06+3KyF798Kxx9a+3HDECG8A7Ny5QDvdsQPOO8/TT7rhwz046sKgj4Tgg3GkQuJzz3kLYzZ69/bwf+aZcMwx3qK8dq0HzYZuq6oK+5rqM3Kkh8dPfhJGj275/Uv7snUrrFzpZdWq+P6KFT53Yi7v4d69/fLq1AA2w4cX7LBFRKQdGz9+PPPmzZsXQhjf3LoUGtuhUg+N4F+yjjmm9q/x3/0uXH99AXdaVQUXXgh//3vt5UOHenAcMaKAO2/btm71FpJUUFy9OvttjzzSQ2IqKJbn2P8hBNi+vfFgmbpdu7Z5E5onvYZLL4VLLlHDcynas8ff86kgmBkMV67MfX7EdJ06wQknxCHxyCPzPGq0iIgUJYXGEqfQ6K65Bm6+OX7cqRPMnw8HHVTAne7e7cnggQdqL993X7/GsaA7bztCgDfe8JA4Y4Zf8lldnd22PXr4oEZnnOHTX+Z9EKNGhJB9C+batbB+ffavzQxOPNED5IUXll43wW3bfFrTJ57w6/C6dYOePf3y4F694vv13Xbu3Da7+4bgXazTA2BmKFy9OvvW9GwdcUQcEk84wa/DFRERyYVCY4lTaHRbtni3wPffj5dNnuwtXgX98rlnD1x+ee1hXMEveJs9Gw45pIA7bz3bt/vLS7UmrlyZ/bZjxsStiRMnQseOhTvOfKupgc2bPUi++ircdZe//samOSgv9662l14K06Z5gCo21dU+mFHqWrwXXsg+YGfq2LFumGwsaKbf9ujRtNa3Xbt8lN6GQuGHHzbtNeVi6FAPiVOm+N+x/v0Lv08RESluCo0lTqExdvfdfk1Zuj//2b+oF1R1NfzLv8Add9Re3r+/f3s+7LACH0DhhQBLlsStiXPnZj8fXNeu3kJyxhlehg4t7LG2tE2b4C9/gTvv9PGRGvsz2qWLB8dLL/Ug2alTyxxnvoUAb70Vh8Qnn4xHMm4LundvOFh26+bhPz0Qpv/oVEgVFTBkiH8WMsuBB8KwYW2zpVVERNovhcYSp9AYC8G/hM+aFS8bMAAWLfLBIgpq71743Ofg9ttrL+/Txw9o3LgCH0D+7dzp3QtTQXHZsuy3PeiguDXxxBP9S3IpWL0a7r3XA+Q//9n4+r17e9fVSy/1+fPa+px5a9d6d9NUUMx2WpNSM3Bg/YFw6FAPi/37t/1/axERKS4KjSVOobG2JUtg7FjvZpbyhS/Ar3/dAjuvqYGrr4Zbb629vFcvn63+mGNa4CCaZ9ky7245Y4Z3P812FMfKSu9Gd+aZ3pqoERzh7be9++qdd/oPF43Zd1+4+GIPkOPGtY2Wpp074emn45D46qu5bX/QQfH8gNXV3rV3y5b6b9PvZ9uK3Rq6dKk/CKbu77ef5kIUEZG2R6GxxCk01nX99XDddfFjM7++qkUyWwjw1a/CjTfWXt69u6ex449vgYPIzeLFcN99XubPz3674cPj1sRJkwo4xUk7l5p25M47vQt1Nq1zo0bFU3i05HhKNTXwyiseEmfN8vkC03+AaUz//vEcgR/7mIeppqiqyj5g1nfb1G6yZj4YU1LX0aFDvfNAWwj0IiIiuVBoLHEKjXVVVfllhEuWxMuOPNIH6ch1CocmCQG+8Q34f/+v9vKuXeFvf/OE1creeAOmT/eguHBhdtt06gQnnxwHxZEj9eU5VzU1HsTuvNPP/YYNjW8zbpy3Pl58cWGm8Fi+3FsRZ83yrqcbN2a/bWWld6tNDdoydmzb6Ha5d6+P3tpQwNy61bsHpwfCwYPb7zWmIiIiDVFoLHEKjfV7/HH/Eptu2jS/fmzKFNhnnwIfQAg+WeQPf1h7eefO8NBD3gzTgkKA11/3oDJ9uofGbAwZEofEyZOLc9TP1rJnjwe1O++Ev/618VE5zTygXXopXHBB06fw2LTJB61JtSYuXZr9tmYeYlMhceJEdcUUERFpDxQaS5xCY7JPfcq/kNfnsMP8S+/UqT5QS8G6Vv7gBx4e01VU+HCbZ55ZoJ26EGDBgjgoZnNdXVmZn4+zzvLDO+QQtSa2hB074OGH/f36yCMeKBtSXu7zWqam8OjaNXndXbvg+efj1sSXXsptHsFhw2pP/1Bq802KiIgUA4XGEqfQmOz9933uxi1bGl6voiLuYjd1agG62P3Xf3l31XQdO3qaO+ecPO4ovn4uFRTfeqvxbTp0gFNO8VbY887zEWel9WzaBPff74PoZDuFxznneICcOtXfWgsXxoPXzJ3roTRbvXp5OEwFxeHD9cOBiIhIe6fQWOIUGhv2t7/BFVdkd+1YysCB3nt06lT/0jxoUB4O5IYb4Npray8rL4c//rHu5JI5CgHmzfOQOH26j9rZmA4d4NRTPSiee64mD2+rVq+Ge+7xAJnNFB59+vg1ebnMN9ixo3czTYXE8eP9/SEiIiLFQ6GxxCk0Nm7PHh89ddYsmDnTv3zn0j1vzBgPkKmurF26NPFAbrkFvvjFusunTIGf/MRH68lSCN7NMNWiuHx549uUl3sYvugib5lSN8P2ZcmSeAqPxYubV9fYsfEopyed1HD3VhEREWn/FBpLnEJj7jZu9DkIZ83y6RPfeSf7bTt18uCYaoU8/PAcu7L+9rfw2c/W3+fwU5/yayAPOKDeTUPwEWBTQTGb4+7Y0Y/1wgs9KPbuncOxSpsUgs+XmJrC4913G99m8ODaU2EUfCAoERERaVMUGkucQmPzhODdOVOtkLNn+1D92erfP+7WN2WKT9DeqDvugCuv9HkBMnXq5K2R3/kO9OtHTY23kqa6nmYzx1+nTnDaaR4Up03za9SkONXUwDPPxFN4pKbL6NrVZ3ZJvS8PPljXJYqIiJQyhcYSp9CYX3v2wD/+EYfIF1/MrSvroYfGA+o02O3vpZfg3/4N5syp81QNxnNdpjD9iB8wfcVRvLe68abMigofTfPCC+Hss6Fnz+yPWYrD7t3eAglwxBGab1BERERiCo0lTqGxsFJz2s2c6V1ZV6zIfttOneCEE+IQecQRGV1ZQ/D5Fb7xDfYufINnOZ77uIj7uYA1DG60/spKOOMMv0bxrLOgR4+cX56IiIiIlACFxhKn0NhyQvCJ0NO7sm7dmv32/frVHZX1qadg+n01/OXOKt7f0vgIO507B8480z4Kit26NeMFiYiIiEhJyGdoLM/HAYkUKzM48EAvX/gCVFd799WZM7384x8Nd2Vdv94HLrn7bn/crRts3w5QBiQHxi58yMf5GxcynTMP20jXa78Pxx+fz5cmIiIiIpIVhUaRHJSX+/x2EyfCddfB5s1xV9aZM2HZsoa398BYv64dd3H23ge5qOZuTudRurDTn/gHcMJsHwr1xz/2EU5ERERERFpILhMHiEiGXr3gvPN8OsalS31U1ltu8WXZXG/YvTtceik88ACs21LBXSsmcP6VvehiVXVXfvBBn0Dyc5/zGeBFRERERFqAQqNIHo0YAVddBX/5C2zYAM895y2SEydChw6+To8ecPnlngHXroU//xnOPRc6dwaGDIHbb4f58+HjH6+7g5oa+M1vvL/sd74DW7a05MsTERERkRKkgXDaIQ2E0z5t2eJBct99fbqMrMydC9/4hl88WZ++feHf/90vuMy6UhEREREpdvkcCEctjSItpGdPGD48x2x38snw/PMwfTqMHFn3+Q0b4NprYfRob7LMZYJJEREREZEsKDSKtHVmcMEF8PrrfsHkwIF111mxAi67DMaP9xF5RERERETyRKFRpL3o2NEvmHz7bfj+9+ufsPHVV+G003xSyHnzWv4YRURERKToKDSKtDfdusF//IcP13rNNT4PSKbHH/dWx0svbXweEBERERGRBig0irRXAwbAjTfCokVw8cX1r3PXXX6941e+AuvWtezxiYiIiEhRUGgUae9GjIC774YXX4RTTqn7/J49Hi5HjIAf/hA+/LDlj1FERERE2i2FRpFicfTR8MQT8MgjcNhhdZ/fts27tR54INx2G1RXt/wxioiIiEi7o9AoUkzM4PTT4ZVX4I9/hKFD667z/vs+oM6YMfDAA6C5WkVERESkAQqNIsWorAwuvxwWL4af/Qz69Km7zuLFcP75cPzx8OSTCo8iIiIiUi+FRpFiVlkJX/uaj7T6zW/640zPPw+TJ8OwYfD1r8MLLyhAioiIiMhHFBpFSkGvXvDjH8OSJfCZz3hLZKaVK+HnP4cJE2D//T1sPv881NS0/PGKiIiISJuh0ChSSvbbD/7nf2D+fJg2LXm9VavgF7+AiRM9QF57LTz3nAKkiIiISAlSaBQpRYceCg8+CE8/DRdcAJ07J6/77rtwww1+7ePQofDVr8KzzypAioiIiJQIhUaRUnbCCTB9OqxbB/fcAxde2HCAfO89+OUvfbuhQ+ErX4FnnlGAFBERESliCo0iAl27wic+Affd5wHy3nvhoougS5fkbd57D268EU48EYYMgS9/2VsuFSBFREREiopCo4jU1rWrB8Z77/UAed99HigbCpCrV8NNN8FJJ/l1k9dcA089BXv3ttxxi4iIiEhBKDSKSLIuXbzL6j33eICcPh0uvtiDZZI1a+Dmm+Hkkz1AfulLMHeuAqSIiIhIO1XUodHM9jOz281stZntMrMVZnaDmfXOsZ4+0XYronpWR/Xul7D+CjMLCeX9/Lw6kRbWpYsPmnP33R4g778fLrmk4QD5/vvwq1/BpEkeIK++GubMUYAUERERaUcsFOkk3mY2AngOGAA8CCwCjgFOARYDx4cQNmRRT9+onlHAbOCfwGjgHGAtMCGEsCxjmxVAL+CGeqrcHkL4adNe1Uf1vzxu3LhxL7/8cnOqEcmPnTvh0Ue9G+vDD8P27Y1vM3AgnH++d4M96STo0KHwxykiIiJSQsaPH8+8efPmhRDGN7euYg6NjwFTgS+HEG5KW/5z4FrgthDCVVnUcxvwOeAXIYSvpS3/MvBL4LEQwukZ26wACCEMa/4rqfeYFBqlbdq5Ex57LA6Q27Y1vs2AAbUDZHl54Y9TREREpMgpNDbCzIYDS4EVwIgQQk3ac92BNYABA0IIHzZQT1dgHVADDAohbEt7rizax7BoH8vSnlsBCo1S4qqq4gD50EPZBcj+/eMAefLJCpAiIiIiTZTP0Fis38gmR7cz0wMjQAhhm5k9i7dCHgc80UA9E4DOUT21vvGGEGrMbCbeCnkKsCxj2wozuwwYCnwIzAeeCiFkfTGXmSWlwtHZ1iHSaior4ZxzvFRVwcyZcYDcurX+bdatg9tu89K3L4wfD4cdFpfRo6GiomVfh4iIiEiJK9bQeFB0+1bC80vw0DiKhkNjNvUQ1ZNpH+COjGXLzezKEMLcBvYpUnwqK2HaNC+7dsUB8sEHkwPkhg2+3syZ8bLycg+O6UHysMNg8GAwa5nXIiIiIlJiijU09oxutyQ8n1req0D1/A54Gngd2AYMB76Et0o+YmYTQgivNbJvkpqSoxbIcY1tL9ImVVTA2Wd72bULZs2KA+SWpI9apLoaFi70cued8fI+feoGyUMPbXhuSRERERHJSrGGxsakmiSae0FnvfWEEK7PWG8hcJWZbQe+DlwHnNfMfYu0fxUV8PGPe9m1Cx5/PA6QmzdnX8/GjT6Vx5w58TIzGDkyDpFjx/rtsGFQVtSzDYmIiIjkVbGGxlRzRc+E53tkrFfoelJuxUPjSVmuL1I6KirgrLO8VFfDkiUwf37tsnJl9vWFAG+95WX69Hh5t25xgEwPlD2TPuYiIiIipa1YQ+Pi6La+aw0BRka3Sdcq5ruelLXRbQOzoYsI5eVw8MFeLr44Xr55MyxYUDtILlgAHyYOglzX9u3w/PNe0u2/f90urgceqBFcRUREpOQV67ehJ6PbqWZWVs+UG8cDO4EXGqnnhWi9482sez1TbkzN2F9jJkS3mSOtikg2evWCE0/0klJTA8uX122VXLrUWxuz9c47Xh5+OF5WWenXRqYHyUMOgYEDNfCOiIiIlIyiDI0hhKXRdBhTgauBm9Kevh5v6bstfY5GMxsdbbsorZ7tZnYHPoDNdXjX0pQv4XM0PpYxR+OhwJoQwsb0YzKz/YGbo4d/auZLFJGUsjIYMcLLeWmXCm/fDq+/XjdM5nKtZFUVvPyyl3S9esUtoaNHx/eHDYMOHfLyskRERETaCgu5/BLfjpjZCOA5YADwIPAmcCw+p+JbwMQQwoa09QNACMEy6ukb1TMKmA28CBwMnIN3N50YQliatv51wDfx1sfl+OipI4CzgEpgBnBeCGF3M17by+PGjRv3cuYXWRFpWAjw7rt1g+TixbA36ylUk1VUwKhRcYhMlZEjoXPn5tcvIiIikqXx48czb968eUkzMuSiKFsa4aPWxqOA7wOnA2cCa4AbgeszWwIbqGeDmU0AvgecC5wIbMCn1fhuCOHdjE2exOd3PBLvjtoV2Aw8g8/beEco1qQu0taZwZAhXs46K15eVQVvvlk7SL72Gqxbl1v9u3b5NZYLFtTd7wEH1N862bt381+XiIiISAEVbUtjMVNLo0gL+eCDuoPuLF4MO3bkbx8DB9YOkamy7766GWPZQwAAHDZJREFUblJERESaTC2NIiItYeBAmDLFS0pNDaxa5S2Tb74JixbF99evz30fH3zgZe7c2su7dasdJlP3R4yAjh2b97pEREREcqDQKCKSi7Iyn55j//3h9NNrP7d+fd0g+eabPiprrrZvh5de8pKuvNyvkUwPlIcf7qO8lpU1/XWJiIiIJFBoFBHJl3796k4JAt6ddfHi2kFy0SJ46y3Ysye3fVRXx3U88EC8vH9/OOUUOPVUL8OHq3uriIiI5IVCo4hIoXXpAkce6SVddTUsW1Z/6+S2bfXXlWTdOrj3Xi8AQ4fGAXLyZBg0KD+vRUREREqOQqOISGspL/cpOkaNgnPOiZeHAGvW1A6RqWC5Zk12da9cCb/7nRfwbqypEDlpks81KSIiIpIFhUYRkbbGDAYP9nLqqbWf27w5bpVctMhHdH32Wdi6teE6U8Hz5pv92sdx4+IQefzx3hoqIiIiUg+FRhGR9qRXLzjuOC8p1dXw8svwxBNenn3W54xMUlMTD7Lzk59Ap04wYUIcIo8+WiO0ioiIyEc0T2M7pHkaRaRBO3fC88/HIfKf//SgmK1u3eCkk+IQOXasRmYVERFpZ/I5T6NCYzuk0CgiOdmyxeeBnD3bQ+TChblt369f7ZFZR4zQyKwiIiJtXD5Do7qniogUu549Ydo0LwAffOABMhUily9vePv16+G++7yAj8w6eXI8MuvgwYU9fhEREWlVamlsh9TSKCJ5tXy5h8dUiFy7NrftR4+uPTJr794FOUwRERHJnrqnljiFRhEpmBDg9dfjEDlnTuMjs6Yz85FZJ02CIUOgb18v/frF93v0UPdWERGRAlP3VBERKQwzGDPGy1e+Untk1tmz4ZlnGh6ZNQRfv6EftcrL4wBZX6hMv5963Ls3dOiQ/9crIiIijVJoFBGRZOXlcOyxXr79baiqgueei0PkP/8Je/fmVmd1tV9X+cEH2W9j5tONZBMw0x9XVOR2bCIiIlKHQqOIiGSvstIHv5k82R9v2QJPPRWHyAULCrPfEGDTJi9vv539dt261Q6R3bpB587ZlcrKxtcp13+jIiJS/PS/nYiINF3PnnD22V7AWw+ffBLeeAM2bIjL+vXx/R07Wu74tm/38s47ham/vDy3kFlfKO3SBbp29dKtW3w/vXTurOtARUSk1Sg0iohI/gwcCJdc0vA6O3fWDpSZoTL9furxli0tc/y5qq6Gbdu8FJJZ/WGyoaDZ0HPpyysrFUhFRKRBCo0iItKyOneG/fbzkq3qati4MTlU1nd/48bcr7dsq0KIW03zrays/tbObt2ge/faJXNZ0jq6llREpKgoNIqISNtXXg4DBnjJVk2Nt1CmB8wdO7ylM6lUVTX8fOZ6NTWFe80tpaYm/4G0Y8fGg2U24TN1XyFURKRVKTSKiEhxKivzqTp694YDD8x//SHAnj3ND6E7dsCHH9Yt27fH9xua5qQt2rPHW3o3bsxPfR07eojs0wf698+udOmSn32LiIhCo4iISJOYQadOXnr2LOy+qqvjcJkeJpNCZi7Ld+8u7LHnw5498ei5S5dmt02XLtkHzP79vUVT13aKiNRLoVFERKStKy+HHj285Ft1df1hcts2v58a6CdVMpfVt05buJZ0xw4fNTfbkXM7dcotZPbq5a3ZIiIlQKFRRESklJWXe0tpvlpLQ/DutLkGzYbWqa7Oz7E1ZPdueO89L9no0AH69fMus5WVft1lRUXt+4V83KFDYc+HFN7WrbByZVxWrfLbNWv8h4nDDoPDD/fbffdVS7i0KoVGERERyR8zDzaVlf7Ft7nSQ+iGDbBuXXZlz57m77she/f6vKQffFDY/STp0CE5VFZW+jWgqdbp7t3j+40t0xQs+bFnD6xeXTsMZpbGphK6++74fp8+Hh7Tg+Shh/po1CItQKFRRERE2q7MEDp6dOPbhOCtOI0Fy7Vr4/tVVYV/Lfm0d693wd2xI7/1pneFTgqX2QTR7t2LtzU0BL++NikMrlzpgTGfoytv3Ahz5nhJKSuDUaPiEJm63W8/BX/JO4VGERERKS5mcZfbbEbODcGv48y2FXPdusLMmdkWpOZEzcfIt1271g6SXbv6AEWdO8e3zb3fsWPzjzPTrl3eTTkpEK5c6e+X1lZTA4sWebnnnnh57961Q+Thh6tVUppNoVFERERKm5l35+zWDQ44ILttqqo8PG7Z4iFj1y5fVt/9XB9ns257kBpc6f33C7eP8vLmBc8Q6rYYFvJ403XqBEOHehkyJL4/aJAP4DR/Prz2GixYkFtI3bQJ5s71kpJqlcwMk2qVlCwpNIqIiIjkqrLSv+gPGdLy+07NEZoUKKuqvCV069baZdu2xpcV+lrQfKuujgdMamsGDIiDYH2lf//sRuCtqYFly+IQmbpdvjz7Y0lvlbz33nh5qlUy/XrJQw/VPKdSh0KjiIiISHuSPkdo9+75rXvXrqaFzfoeF7POnRsOhPvt5z8s5ENZmXezPvBAOP/8ePnWrd4KmR4m58/PT6vkyJF1WyWHDFGrZAlTaBQRERERV1ERz0XZHDU1Hl7Sg+SHH8LOnT54z86d2d1v7Pl8DjaTYuZdRJMC4ZAh0Ldv6weoHj3g+OO9pNTUeAtkZqvksmXZ11tTA4sXe7nvvnh5x47+Q0X6bX2loecKsW0ItQvUXdYa6/TsCdOmNf3ft41RaBQRERGR/Cor81bQ7t19jsFCSHXTbUrYTN2vqfHjS7+mcN99PZy0R2VlMGKEl/POi5dv21Z/q2QuAzrt2dP+ui+3poMPVmgUEREREWlV6d10e/Vq7aNp27p3h4kTvaTU1MCKFbVbJOfPh6VLW+0wi0qqJbJIKDSKiIiIiJSasjIYPtxLZqvkwoV1w2SxTjNTKAqNIiIiIiJSlLp3hwkTvKSE4IMk7dkDu3fHXVXrKw09X4htzeoWqH95S64zeHDL/Zu1AIVGERERERFJZuajweZrRFhpd7KYHEZERERERERKlUKjiIiIiIiIJFJoFBERERERkUQKjSIiIiIiIpJIoVFEREREREQSKTSKiIiIiIhIIoVGERERERERSaTQKCIiIiIiIokUGkVERERERCSRQqOIiIiIiIgkUmgUERERERGRRBZCaO1jkByZ2YbOnTv3Ofjgg1v7UEREREREpA1688032blz58YQQt/m1qXQ2A6Z2XKgB7CilQ8lZXR0u6hVj6K06Jy3Dp33lqdz3vJ0zluHznvL0zlvHTrvLWcYsDWEcEBzK1JolGYzs5cBQgjjW/tYSoXOeevQeW95OuctT+e8dei8tzyd89ah894+6ZpGERERERERSaTQKCIiIiIiIokUGkVERERERCSRQqOIiIiIiIgkUmgUERERERGRRBo9VURERERERBKppVFEREREREQSKTSKiIiIiIhIIoVGERERERERSaTQKCIiIiIiIokUGkVERERERCSRQqOIiIiIiIgkUmgUERERERGRRAqNIiIiIiIikkihUeows/3M7HYzW21mu8xshZndYGa9c6ynT7Tdiqie1VG9+xXq2NsjM+trZv9qZg+Y2dtmttPMtpjZM2b2GTPL+nManeuQUN4v5Otob/J5rvL1mSl2ZnZFA+c8VfZmWZfe62nM7EIzu8nMnjazrdF5+FMj20w0sxlmttHMdpjZfDP7qpl1aML+DzGze81srZlVmdliM7vezDo3/VW1fbmcdzMbaWbfMLPZZrbKzHab2Qdm9qCZnZLjfoc18jm6Oz+vsO3J8Zzn/Tzl83PTnuR43n+fxd/6J7Lcb8m+19ua8tY+AGlbzGwE8BwwAHgQWAQcA3wFON3Mjg8hbMiinr5RPaOA2cDdwGjgSuAsM5sQQlhWmFfR7lwE3AKsAZ4EVgIDgfOB/wHOMLOLQgghy/q2ADfUs3x7Ho612DT7XOXrM1MiXgWuT3juRGAy8EgO9em9Hvt34HD8tb+L/71NZGbnAPcDVcA9wEbgbOAXwPH436WsmNmx+N/5jsB0YBX+b/ld4FQzOzWEsCvH19Ne5HLefwBcDLwBzMDP+UHANGCamX0lhHBjjvt/DfhrPcsX5lhPe5LTez2Sl/OUz89NO5TLef8rsCLhucuB4eT2tx5K873etoQQVFQ+KsBjQACuyVj+82j5rVnWc1u0/s8zln85Wv5oa7/WtlLwL1dnA2UZy/fBA2QALsiyrhXAitZ+Te2h5Otc5eszU+oFeD46X9Na8t+vWApwCjASMGBSdC7/lLBuD2AtsAs4Km15Jf4DSAAuyXK/HfAQVOvfDu/JND1a/s3WPj9t5LxfARxZz/KTgd3Rv8egLPc7LNrX71v7HLTxc56385TPz017LLmc9wbq6AXsiM5hvyy3Kdn3elsr6p4qHzGz4cBU/MvYrzKe/h7wIXC5mXVtpJ6u+C9JH0bbpbs5qv+0aH8lL4QwO4TwcAihJmP5+8Ct0cNJLX5g0qh8fWZKnZmNAY4D3gP+3sqH0y6FEJ4MISwJ0besRlwI9AfuDiG8lFZHFd6aAPCFLHd9MnAw8FQI4aG0umqA/xM9vMrMLMv62pVcznsI4fchhFfqWT4XmAN0Aibm/yiLS47v9XzK5+em3cnTeb8c6Az8JYSwPk+HJi1E3VMl3eTodmY9AWabmT2Lf0E+DmioL/oE/I/CzBDCtox6asxsJvA5/FcrdVFt2J7otjqHbSrM7DJgKB5a5uNf6LK6VqzENPdc5eszU+o+H93+Nsf3qd7rTZN63z5az3NP4S0BE82sIjTerTSxrhDCMjN7C79MYTiwtInHWwqa8rceYLCZfR7oC2wAng8hzM/rkRWHfJynfH5uStVno9v/bsK2eq+3MoVGSXdQdPtWwvNL8C/Ao2j4C3A29RDVIwnMrBz4X9HD+v6TSrIPcEfGsuVmdmX0i7bEmnuu8vWZKVnRQCmXATX4Nby50Hu9aRLftyGEajNbDhyKB703m1pXZAn+/h+FQmO9zGx/4FQ8dDyV4+ZTopJe3xzg0yGElXk5wOKQj/OUz89NyTGzCcBY4K0QwpNNqELv9Vam7qmSrmd0uyXh+dTyXi1UT6n7T2AMMCOE8FiW2/wO//KxD9AV/wN9G35NwCNmdngBjrO9yse50nu9+T6Bn59HQgircthO7/Wmy+f7Vp+BZjCzCuDPQAVwXQhhU5ab7sAH1hkP9I7KyfhgapOAJ9QtHsjvedJ7vXk+F93+Jsft9F5vIxQaJRepa1Kaex1BvuopWmb2ZeDr+Eicl2e7XQjh+ugayQ9CCDtCCAtDCFfhg7J0Bq4ryAG3Qy10rvReb1zqi8RtuWyk93pB5fN9q89AgmiKhjvwUTfvAX6a7bYhhLUhhO+GEOaFEDZH5Sm8Z8M/gAOBfy3EcbcnLXye9F5PYGY98R8IdwO/z2VbvdfbDoVGSZf6laxnwvM9MtYrdD0lycyuBn6Jj0h4SghhYx6qTQ2oc1Ie6ip2uZwrvdebwcwOwQf+eBefgiAf9F5vXD7ft/oMNEEUGP+ET9FwL3BZPgZ2CSFUE3fz1mcgQRPPk97rTXcZ0IU8DoCj93rLU2iUdIuj26RrDUdGt0nXruS7npJjZl/FR5hdiAfGfE1Svja6VReOxuVyrvReb56mDoDTEL3XG5f4vo2upT4AH5Alm4HK9BnIUXSO7wIuAe4ELo2+AOfLuuhWn4GG5Xqe8vm5KTWpAXBy6lGSBb3XW5BCo6RLXZg81cxqvTfMrDvehWYn8EIj9bwQrXd8tF16PWV4l4L0/QlgZt/AJwh+FQ+MaxvZJBcTolv9Z9a4XM5Vvj4zJcfMKvGu1zXAb/NYtd7rjZsd3Z5ez3Mn4S0Cz2U5AmRiXdGUNKOAd9C/BwBm1gmfv/Ii4I/A5QUY7fe46FbnvGG5nqd8fm5KhpkdCxyOD4AzJ8/V673eghQa5SMhhKXATHwgiasznr4e/yXnjyGED1MLzWy0mY3OqGc7fp1GV+peV/SlqP7HQgj6kEfM7D/wgW9eBk5tqPuGmXWMzvuIjOWHmlmfetbfH2+9BO8OVfJyPVdJ57wpnxn5yEX4gAYzkgbA0Xu9YKYD64FLzOyo1MIoyP8wenhL+gZm1iX6txiaUddcfKTIk8xsWtr6ZcBPooe3tsKcem1ONOjNA8A5+A8lV2ZO1VPPNj2j8z4oY/mxUQDNXH8ycG30sOQ/A005T0nnnCZ8bgSIr1tvcJoNvdfbPtPfcUkXfTl7DhgAPIh/GTgWn1PxLWBiCGFD2voBIIRgGfX0jeoZhf869yI+AfQ5ePexidEX7pJnZp/GLwzfC9xE/ddDrAgh/D5afxiwHHgnhDAsrZ7rgG/irV/LgW3ACOAsoBK/Zuy8EMLuQryO9iTXc5V0zqPncvrMiDOzp4ETgGkhhIcT1hmG3utZMbNzgXOjh/sAp+G/vj8dLVsfQvjfGetPB6qAu4GNwDR8WoHpwCfSg56ZTcLP99wQwqSMfR+L/53vGG27Eh/Z9ijgWfyHsKJsfcnlvJvZ74Ar8ODxa+ofMGVOemuMmV2BjxT8hxDCFWnL5+DTO8zBrwkGOIx4LsH/CCGkgkxRyfGczyHH85R0ztP2nfXnppjk+jcm2qYHsBr/27BvIz+IX4He621bCEFFpVYBhuAf3DX4SFfv4AOz9Kln3eBvo3rr6RNt905UzxrgdmC/1n6NbangrbGhkTInbf1h0bIVGfWcjF8nswjYjE8WvQ6Yhc/3aK39WttKyfVcJZ3ztOez/syoBPAfkAKwCujQwHp6r2d/Thv7O7Kinm2OxwP2Jrwb9QL8l/s6/yb40Pa1/hZlPH8IcB8eiHbhP5hcD3Ru7XPTVs47/qW3sb/112XUf0W0/PcZyz8D/A1YAWyPzvlKfBTWE1v7vLShc57zeUo652nPZ/25KabSxL8xX4ieuyuL+vVeb+NFLY0iIiIiIiKSSNc0ioiIiIiISCKFRhEREREREUmk0CgiIiIiIiKJFBpFREREREQkkUKjiIiIiIiIJFJoFBERERERkUQKjSIiIiIiIpJIoVFEREREREQSKTSKiIiIiIhIIoVGERERERERSaTQKCIiIiIiIokUGkVERAQAM5tkZiEq17X28YiISNtQ3toHICIi0lLMLDRhs9dCCEfk/WBERETaCbU0ioiIiIiISCK1NIqISKk6L8v1thT0KERERNo4hUYRESlJIYS/tvYxiIiItAfqnioiIiIiIiKJFBpFRERyVN8oo2Y21sz+28yWmtlOM1tnZo+b2SdzqHeImf2nmc0zs41mtsvM3jOzh83sCjPrkENdR5nZjWb2mpltMLM9UZ3/MLOfmdmxWdYzNFp/kZl9aGabzew5M/uimTXYY8nMOpjZ5dHxrzKzqujcrIpe43+b2flm1iXb1yUiIi3PQmjKQHIiIiLtT/roqSEEa0Y9k4Ano4fXA0uB3wAVCZv8HbgwhFDVQJ2fB34BdG5g1wuAaSGEFQ3U0xX4b+DSBupJGRZCeCdt20nUfl0vAHcBvRK2nwWcHULYVc9x9ANmAEdncRznqbuwiEjbpWsaRUREmudo4NvR/duBp4C90fLPAF2Bs4A/ARfWV0EUGG9NW/QwHjQ3A6OAK4EDgLHAM2Z2ZAhhXT31VOKhLxXUqoB7gWeBTUAPYAxwZlRvQ8H5CODfonVuA54HdgFHAVdFr2sK8B3gu/Vs/5u043gbD59vATuj4zgIOAnIqsVTRERaj1oaRUSkZBSopRFgGzA1hPBCxnojgTnA4GjRhSGE+zPWGQa8gbcw7gUuDSHcm7FOZ+A+PHwCTA8hXFTPcf0a+EL08DW8VXJlwmuYDMwLIWxu4HWtBD4WQliSse0xeBAtx8PooPTWRjMbAKzBL4N5CZgUQvgw4Tj2B0hv8RQRkbZF1zSKiEhJSrsmsbFyRRbV/VtmYASIwtZn0hb973q2/TJxl9SfZQbGqJ6deHfTNdGiC8xsVMbrGQp8Nnq4ATgjKTBGdc5OD4wJLssMjNG2LwL3RA97A8dkrDKc+DvGnUmBMarrHQVGEZG2TaFRRESkeTYBv0t6MoTwKN6SCHCcme2Tscr50W018LMG6tkK/Dp6aMC5GatcTHzZyU0hhDU0zyshhKcbeH522v1DMp7bkXb/0GYeh4iItDJd0ygiIqXqvCzXm9fI80+HEHY3ss5s4mB1NH7NYqob5/7R8tdCCGsbqWcm8IPofua1gCek3X+okXqyUaflNMN7afd7Zzz3OrAa75b7GTMz/BrHF0MINXk4NhERaUEKjSIiUpLyOFrn2zmuMzjt/qC0+29lUU/6OoMyntsv7f6bWdTVmPWNPJ8+Ympl+hMhhL3R4D73A52Af4nKZjN7HngGeCyE8HIejlNERApM3VNFRESaZ0fjq5B+TV+3tPvdE9ZJsj1hW/ARSQH2NjS1Rw6a1SIYQvgbfq3jX4E90eJewBnAj4CXzGyBmZ3erKMUEZGCU2gUERFpnmwmpu+adj89+G1LWCdJeuDclvHc1ui2QzT1RqsLIbwWQjgP6IuHxR8Ac4lD5Bhghpl9qpUOUUREsqDQKCIi0jwH5rjO6rT76YPVjMyinvR1Vmc8927a/YOzqKvFhBC2hRAeDSF8N4QwCe9a+4voaQN+bmYdWu0ARUSkQQqNIiIizXOCmXVqZJ1T0u7/M3UnGvgmNd3EEWbWv5F6pqbdfzHjufSRTqc1Uk+rCiFsCCF8DZ/DEWAA2YVmERFpBQqNIiIizdMH+HTSk2Y2lXjaiedDCO9nrHJ/dFsOfLWBeroDX4weBuCBjFXuIe72eY2ZZQ6U0xatSLuvwflERNoohUYREZHm+6mZHZ250MxGALenLapvHsabgJ3R/f9jZhfUU08l8CfikVfvDyEsSV8nhLAKn9YC/BrCGWY2NOmAzexkM+uV9HxzmNlpZvYVM+vZwDoHAlOih9uBpYU4FhERaT79qiciIiXJzM7NYfW/hxD2JDw3Aw8/z5rZH/Buonvx+Rg/Qzx4zV9CCPdnbhxCWGFm1wK34v8vTzezB6N6N+PdNv8FGB5t8h5wdcKxfD3a79HAEcBiM7sHeA7YiI+4eihwJn7d4wHRPvJtEHAD8F9m9iTwD2AZPtJsv+j4PkE8+M8NIYSd9VUkIiKtT6FRRERKVWb3zob0Jjlc/RO4C/gf4F+jkmkGkDhCaAjhNjMzfHCYSuCcqGRaCJwdXQtZXz1VZjYZ+B1wYVTXp0nuPtusaTUakKq3E3BaVOoTgBuB7xXoOEREJA8UGkVERJophPAnM3sN+DIwGe9GugN4FfhtCOHOLOq41cz+jrcingYMw6fz2AC8AtwH3BFC2NtIPduBi8xsIh4WT46OpzOwBXgLbw29K4SwMvdXm5U78Nd+arT/Q/HWx0q8K+py4Bng9hDCKwU6BhERyRMLIbT2MYiIiLQrZjYJeDJ6eH0I4brWOxoREZHC0kA4IiIiIiIikkihUURERERERBIpNIqIiIiIiEgihUYRERERERFJpNAoIiIiIiIiiTR6qoiIiIiIiCRSS6OIiIiIiIgkUmgUERERERGRRAqNIiIiIiIikkihUURERERERBIpNIqIiIiIiEgihUYRERERERFJpNAoIiIiIiIiiRQaRUREREREJJFCo4iIiIiIiCRSaBQREREREZFECo0iIiIiIiKSSKFRREREREREEv1/hSlYXGBHDdIAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 504x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 229,
       "width": 454
      },
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 229,
       "width": 454
      },
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plot the Loss Curves\n",
    "plt.figure(figsize=[7,3])\n",
    "plt.plot(history.history['loss'],'r',linewidth=2.0)\n",
    "plt.plot(history.history['val_loss'],'b',linewidth=2.0)\n",
    "plt.legend(['Training loss', 'Validation Loss'],fontsize=10)\n",
    "plt.xlabel('Epochs ',fontsize=15)\n",
    "plt.ylabel('Loss',fontsize=15)\n",
    "plt.title('Loss Curves',fontsize=15)\n",
    "\n",
    "#Plot the Accuracy Curves\n",
    "plt.figure(figsize=[7,3])\n",
    "plt.plot(history.history['acc'],'r',linewidth=2.0)\n",
    "plt.plot(history.history['val_acc'],'b',linewidth=2.0)\n",
    "plt.legend(['Training Accuracy', 'Validation Accuracy'],fontsize=10)\n",
    "plt.xlabel('Epochs ',fontsize=15)\n",
    "plt.ylabel('Accuracy',fontsize=15)\n",
    "plt.title('Accuracy Curves',fontsize=15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Although the accuracy obtained above is very good, if you see the loss and accuracy curves in the above figures, you’ll notice that the validation loss initially decrease, but then it starts increasing gradually. Also, there is a substantial difference between the training and test accuracy. This is a clear sign of Overfitting which means that the network has memorized the training data very well, but is not guaranteed to work on unseen data. Thus, the difference in the training and test accuracy."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Add Regularization to the model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Overfitting occurs mainly because the network parameters are getting too biased towards the training data. We can add a dropout layer to overcome this problem to a certain extent. In case of dropout, a fraction of neurons is randomly turned off during the training process, reducing the dependency on the training set by some amount."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_4 (Dense)              (None, 512)               401920    \n",
      "_________________________________________________________________\n",
      "dropout_3 (Dropout)          (None, 512)               0         \n",
      "_________________________________________________________________\n",
      "dense_5 (Dense)              (None, 512)               262656    \n",
      "_________________________________________________________________\n",
      "dropout_4 (Dropout)          (None, 512)               0         \n",
      "_________________________________________________________________\n",
      "dense_6 (Dense)              (None, 10)                5130      \n",
      "=================================================================\n",
      "Total params: 669,706\n",
      "Trainable params: 669,706\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "from keras.layers import Dropout\n",
    " \n",
    "model_reg = Sequential()\n",
    "model_reg.add(Dense(512, activation='relu', input_shape=(784,)))\n",
    "model_reg.add(Dropout(0.5))\n",
    "model_reg.add(Dense(512, activation='relu'))\n",
    "model_reg.add(Dropout(0.5))\n",
    "model_reg.add(Dense(nClasses, activation='softmax'))\n",
    "\n",
    "model_reg.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Check performance after regularization"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We will train the network again in the same way we did earlier and check the loss and accuracy curves."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 60000 samples, validate on 10000 samples\n",
      "Epoch 1/20\n",
      "60000/60000 [==============================] - 14s 241us/step - loss: 0.3761 - acc: 0.8840 - val_loss: 0.1475 - val_acc: 0.9550\n",
      "Epoch 2/20\n",
      "60000/60000 [==============================] - 13s 217us/step - loss: 0.1700 - acc: 0.9494 - val_loss: 0.1064 - val_acc: 0.9652\n",
      "Epoch 3/20\n",
      "60000/60000 [==============================] - 14s 237us/step - loss: 0.1313 - acc: 0.9604 - val_loss: 0.1017 - val_acc: 0.9699\n",
      "Epoch 4/20\n",
      "60000/60000 [==============================] - 14s 233us/step - loss: 0.1113 - acc: 0.9676 - val_loss: 0.0826 - val_acc: 0.9763\n",
      "Epoch 5/20\n",
      "60000/60000 [==============================] - 13s 214us/step - loss: 0.0967 - acc: 0.9715 - val_loss: 0.0764 - val_acc: 0.9776\n",
      "Epoch 6/20\n",
      "60000/60000 [==============================] - 12s 195us/step - loss: 0.0862 - acc: 0.9738 - val_loss: 0.0782 - val_acc: 0.9791\n",
      "Epoch 7/20\n",
      "60000/60000 [==============================] - 12s 200us/step - loss: 0.0815 - acc: 0.9752 - val_loss: 0.0795 - val_acc: 0.9791\n",
      "Epoch 8/20\n",
      "60000/60000 [==============================] - 12s 204us/step - loss: 0.0759 - acc: 0.9771 - val_loss: 0.0773 - val_acc: 0.9798\n",
      "Epoch 9/20\n",
      "60000/60000 [==============================] - 12s 198us/step - loss: 0.0709 - acc: 0.9794 - val_loss: 0.0704 - val_acc: 0.9819\n",
      "Epoch 10/20\n",
      "60000/60000 [==============================] - 12s 202us/step - loss: 0.0678 - acc: 0.9801 - val_loss: 0.0732 - val_acc: 0.9832\n",
      "Epoch 11/20\n",
      "60000/60000 [==============================] - 12s 207us/step - loss: 0.0664 - acc: 0.9809 - val_loss: 0.0753 - val_acc: 0.9834\n",
      "Epoch 12/20\n",
      "60000/60000 [==============================] - 13s 212us/step - loss: 0.0621 - acc: 0.9817 - val_loss: 0.0751 - val_acc: 0.9823\n",
      "Epoch 13/20\n",
      "60000/60000 [==============================] - 14s 231us/step - loss: 0.0589 - acc: 0.9833 - val_loss: 0.0740 - val_acc: 0.9827\n",
      "Epoch 14/20\n",
      "60000/60000 [==============================] - 14s 232us/step - loss: 0.0577 - acc: 0.9836 - val_loss: 0.0789 - val_acc: 0.9819\n",
      "Epoch 15/20\n",
      "60000/60000 [==============================] - 14s 239us/step - loss: 0.0563 - acc: 0.9840 - val_loss: 0.0787 - val_acc: 0.9827\n",
      "Epoch 16/20\n",
      "60000/60000 [==============================] - 14s 239us/step - loss: 0.0562 - acc: 0.9844 - val_loss: 0.0814 - val_acc: 0.9829\n",
      "Epoch 17/20\n",
      "60000/60000 [==============================] - 13s 220us/step - loss: 0.0535 - acc: 0.9846 - val_loss: 0.0769 - val_acc: 0.9816\n",
      "Epoch 18/20\n",
      "60000/60000 [==============================] - 12s 206us/step - loss: 0.0505 - acc: 0.9854 - val_loss: 0.0791 - val_acc: 0.9827\n",
      "Epoch 19/20\n",
      "60000/60000 [==============================] - 13s 213us/step - loss: 0.0512 - acc: 0.9858 - val_loss: 0.0791 - val_acc: 0.9832\n",
      "Epoch 20/20\n",
      "60000/60000 [==============================] - 12s 208us/step - loss: 0.0479 - acc: 0.9861 - val_loss: 0.0796 - val_acc: 0.9839\n"
     ]
    }
   ],
   "source": [
    "model_reg.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics=['accuracy'])\n",
    "history_reg = model_reg.fit(x_train, y_train, \n",
    "                            batch_size=256, epochs=20, verbose=1, \n",
    "                            validation_data=(x_test, y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Accuracy Curves')"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 229,
       "width": 454
      },
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 229,
       "width": 454
      },
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plot the Loss Curves\n",
    "plt.figure(figsize=[7,3])\n",
    "plt.plot(history_reg.history['loss'],'r',linewidth=2.0)\n",
    "plt.plot(history_reg.history['val_loss'],'b',linewidth=2.0)\n",
    "plt.legend(['Training loss', 'Validation Loss'],fontsize=10)\n",
    "plt.xlabel('Epochs ',fontsize=15)\n",
    "plt.ylabel('Loss',fontsize=15)\n",
    "plt.title('Loss Curves',fontsize=15)\n",
    " \n",
    "#Plot the Accuracy Curves\n",
    "plt.figure(figsize=[7,3])\n",
    "plt.plot(history_reg.history['acc'],'r',linewidth=2.0)\n",
    "plt.plot(history_reg.history['val_acc'],'b',linewidth=2.0)\n",
    "plt.legend(['Training Accuracy', 'Validation Accuracy'],fontsize=10)\n",
    "plt.xlabel('Epochs ',fontsize=15)\n",
    "plt.ylabel('Accuracy',fontsize=15)\n",
    "plt.title('Accuracy Curves',fontsize=15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above loss and accuracy curves, we can observe that\n",
    "\n",
    "    The validation loss is not increasing\n",
    "    The difference between the train and validation accuracy is not very high\n",
    "Thus, we can say that the model has better generalization capability as the performance does not decrease drastically in case of unseen data also."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##  Inference on a single image"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We have seen that the first image in the test set is the number 7. Let us see what the model predicts."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Getting the predicted class"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "During the inference stage, it might be sufficient to know the class of the input data. It can be done as follows."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([7], dtype=int64)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Predict the most likely class\n",
    "model_reg.predict_classes(x_test[[0],:])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Getting the probabilities"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the above method there is no score which tells us about the confidence with which the model does the prediction. In some cases, for example when there are many classes, we may want the probabilities of the different classes which indicates how confident the model is about the occurence of a particular class. We can take the decision based on these scores."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[8.8939869e-22, 4.0981302e-21, 9.5947420e-15, 1.3637495e-15,\n",
       "        4.1726305e-23, 1.5018285e-18, 7.9844696e-32, 1.0000000e+00,\n",
       "        2.1041348e-22, 3.1584764e-14]], dtype=float32)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Predict the probabilities for each class \n",
    "model_reg.predict(x_test[[0],:])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This gives the probability score for each class. We can see that the score for the 8th index is almost 1 which indicates that the predicted class is 7 with a confidence score of 1."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Save model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Saved model will contain the following:\n",
    "\n",
    "    the architecture of the model, allowing to re-create the model\n",
    "    the weights of the model\n",
    "    the training configuration (loss, optimizer)\n",
    "    the state of the optimizer, allowing to resume training exactly where you left off."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "from keras.models import load_model\n",
    "\n",
    "model_reg.save('my_model.h5')  # creates a HDF5 file 'my_model.h5'\n",
    "del model  # deletes the existing model\n",
    "\n",
    "# returns a compiled model\n",
    "# identical to the previous one\n",
    "model_1 = load_model('my_model.h5')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:tf]",
   "language": "python",
   "name": "conda-env-tf-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
